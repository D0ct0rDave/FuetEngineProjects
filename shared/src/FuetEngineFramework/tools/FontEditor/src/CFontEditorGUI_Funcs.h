//---------------------------------------------------------------------------
#ifndef __CFontEditorGUI_Funcs_
#define __CFontEditorGUI_Funcs_
//---------------------------------------------------------------------------
#include <wx/string.h>
#include <wx/fontenum.h>
#include <wx/grid.h>
#include "CAppGlobals.h"
//---------------------------------------------------------------------------

class CMyEncodingEnumerator : public wxFontEnumerator
{
public:
    CMyEncodingEnumerator()
    {
	}

protected:

    virtual bool OnFontEncoding(const wxString& facename,
                                const wxString& encoding)
    {
        wxString text;
        text.Printf(wxT("%s: Encoding %s"),
                    facename.c_str(),encoding.c_str());

        return true;
    }

	virtual bool OnFacename(const wxString& facename)
    {
		wxString sPrefix = facename.SubString(0,0);
		// if ( sPrefix != wxT("@"))
		{
			globals.m_sFontList.push_back(facename);
		}

        return true;
    }
};
// ---------------------------------------------------------------------------
class CFontListElemRenderer : public wxGridCellStringRenderer
{
public:
    virtual void Draw(  wxGrid& grid,
                wxGridCellAttr& attr,
                wxDC& dc,
                const wxRect& rect,
                int row, int col,

                bool isSelected);
};

// ---------------------------------------------------------------------------
class CSpecialCharElemRenderer : public wxGridCellStringRenderer
{
public:
    virtual void Draw(  wxGrid& grid,
                wxGridCellAttr& attr,
                wxDC& dc,
                const wxRect& rect,
                int row, int col,

                bool isSelected);
};

// ---------------------------------------------------------------------------

/**
@file
Subclass of CFontEditorGUIBase, which is generated by wxFormBuilder.
*/
bool bLoadIniFile(const wxString& _sFilename);
bool bSaveIniFile(const wxString& _sFilename);

void SetFontSize(int _iFontSize);
void SetFontStyle(int _iFontStyle);
void SetStrokeSize(int _iStrokeSize);

void ViewFontRow(unsigned int _uiRow);

//// end generated include

/** Implementing CFontEditorGUIBase */

//---------------------------------------------------------------------------
#endif // __CFontEditorGUI__
//---------------------------------------------------------------------------