# C++ Static Library Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=Debug
endif

ifeq ($(CONFIG),Debug)
  BINDIR := ../../lib/gcc_dll
  LIBDIR := ../../lib/gcc_lib
  OBJDIR := .objsud
  OUTDIR := ../../lib/gcc_lib
  CPPFLAGS := -MMD -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "__WXMSW__" -D "WIN32" -D "_WINDOWS" -D "DEBUG" -D "_DEBUG" -I "../../include" -I "$(WXWIN)/include" -I "$(WXWIN)/lib/gcc_dll/mswud"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g -Wall -O0
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -L"$(WXWIN)/lib/gcc_dll" -l"wxmsw28ud"
  RESFLAGS := -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "__WXMSW__" -D "WIN32" -D "_WINDOWS" -D "DEBUG" -D "_DEBUG" -I "../../include" -I "$(WXWIN)/include" -I "$(WXWIN)/lib/gcc_dll/mswud"
  TARGET := libwxmsw28umd_awx_gcc.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),Release)
  BINDIR := ../../lib/gcc_dll
  LIBDIR := ../../lib/gcc_lib
  OBJDIR := .objsu
  OUTDIR := ../../lib/gcc_lib
  CPPFLAGS := -MMD -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "__WXMSW__" -D "WIN32" -D "_WINDOWS" -D "NDEBUG" -I "../../include" -I "$(WXWIN)/include" -I "$(WXWIN)/lib/gcc_dll/mswu"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -Wall -fno-strict-aliasing
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s -L"$(WXWIN)/lib/gcc_dll" -l"wxmsw28u"
  RESFLAGS := -D "WXUSINGDLL" -D "UNICODE" -D "_UNICODE" -D "__WX__" -D "__WXMSW__" -D "WIN32" -D "_WINDOWS" -D "NDEBUG" -I "../../include" -I "$(WXWIN)/include" -I "$(WXWIN)/lib/gcc_dll/mswu"
  TARGET := libwxmsw28um_awx_gcc.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/led.o \

RESOURCES := \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking awx
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

clean:
	@echo Cleaning awx
ifeq ($(MKDIR_TYPE),posix)
	-@rm -rf $(OUTDIR)/$(TARGET) $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/led.o: ../../src/awx/led.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

-include $(OBJECTS:%.o=%.d)

