; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

	TITLE	i:\Projects\Programming\Projects\KungfuMasterRemake\Framework\src\libconfigFE\src\libconfig.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@IMDPLAPH@file?5I?1O?5error?$AA@	; `string'
_DATA	SEGMENT
___io_error DD	FLAT:??_C@_0P@IMDPLAPH@file?5I?1O?5error?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@IMDPLAPH@file?5I?1O?5error?$AA@
CONST	SEGMENT
??_C@_0P@IMDPLAPH@file?5I?1O?5error?$AA@ DB 'file I/O error', 00H ; `string'
CONST	ENDS
PUBLIC	_DllMain@12
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File i:\projects\programming\projects\kungfumasterremake\framework\src\libconfigfe\src\libconfig.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _DllMain@12
_TEXT	SEGMENT
_hinstDLL$ = 8						; size = 4
_fdwReason$ = 12					; size = 4
_lpvReserved$ = 16					; size = 4
_DllMain@12 PROC					; COMDAT
; Line 61
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 62
  0001e	b8 01 00 00 00	 mov	 eax, 1
; Line 63
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 0c 00	 ret	 12			; 0000000cH
_DllMain@12 ENDP
_TEXT	ENDS
PUBLIC	_config_init
PUBLIC	_config_destroy
PUBLIC	_config_read
EXTRN	_libconfig_yylex_destroy:PROC
EXTRN	_libconfig_yyparse:PROC
EXTRN	_libconfig_yyrestart:PROC
EXTRN	_libconfig_yylex_init:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_read
_TEXT	SEGMENT
_destructor$ = -56					; size = 4
_r$ = -44						; size = 4
_ctx$ = -32						; size = 16
_scanner$ = -8						; size = 4
_config$ = 8						; size = 4
_stream$ = 12						; size = 4
_config_read PROC					; COMDAT
; Line 538
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 544
  0001e	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00021	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00024	89 4d c8	 mov	 DWORD PTR _destructor$[ebp], ecx
; Line 545
  00027	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _config_destroy
  00030	83 c4 04	 add	 esp, 4
; Line 546
  00033	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 _config_init
  0003c	83 c4 04	 add	 esp, 4
; Line 547
  0003f	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00042	8b 4d c8	 mov	 ecx, DWORD PTR _destructor$[ebp]
  00045	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 549
  00048	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  0004b	89 45 e0	 mov	 DWORD PTR _ctx$[ebp], eax
; Line 550
  0004e	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d e4	 mov	 DWORD PTR _ctx$[ebp+4], ecx
; Line 551
  00056	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00059	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005b	89 4d e8	 mov	 DWORD PTR _ctx$[ebp+8], ecx
; Line 553
  0005e	e8 00 00 00 00	 call	 ___config_locale_override
; Line 555
  00063	8d 45 f8	 lea	 eax, DWORD PTR _scanner$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _libconfig_yylex_init
  0006c	83 c4 04	 add	 esp, 4
; Line 556
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _scanner$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 0c	 mov	 ecx, DWORD PTR _stream$[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 _libconfig_yyrestart
  0007c	83 c4 08	 add	 esp, 8
; Line 557
  0007f	8d 45 e0	 lea	 eax, DWORD PTR _ctx$[ebp]
  00082	50		 push	 eax
  00083	8b 4d f8	 mov	 ecx, DWORD PTR _scanner$[ebp]
  00086	51		 push	 ecx
  00087	e8 00 00 00 00	 call	 _libconfig_yyparse
  0008c	83 c4 08	 add	 esp, 8
  0008f	89 45 d4	 mov	 DWORD PTR _r$[ebp], eax
; Line 558
  00092	8b 45 f8	 mov	 eax, DWORD PTR _scanner$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 _libconfig_yylex_destroy
  0009b	83 c4 04	 add	 esp, 4
; Line 560
  0009e	e8 00 00 00 00	 call	 ___config_locale_restore
; Line 562
  000a3	33 c0		 xor	 eax, eax
  000a5	83 7d d4 00	 cmp	 DWORD PTR _r$[ebp], 0
  000a9	0f 94 c0	 sete	 al
; Line 563
  000ac	52		 push	 edx
  000ad	8b cd		 mov	 ecx, ebp
  000af	50		 push	 eax
  000b0	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@config_rea
  000b6	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bb	58		 pop	 eax
  000bc	5a		 pop	 edx
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
  000d1	8d 49 00	 npad	 3
$LN6@config_rea:
  000d4	02 00 00 00	 DD	 2
  000d8	00 00 00 00	 DD	 $LN5@config_rea
$LN5@config_rea:
  000dc	f8 ff ff ff	 DD	 -8			; fffffff8H
  000e0	04 00 00 00	 DD	 4
  000e4	00 00 00 00	 DD	 $LN3@config_rea
  000e8	e0 ff ff ff	 DD	 -32			; ffffffe0H
  000ec	10 00 00 00	 DD	 16			; 00000010H
  000f0	00 00 00 00	 DD	 $LN4@config_rea
$LN4@config_rea:
  000f4	63		 DB	 99			; 00000063H
  000f5	74		 DB	 116			; 00000074H
  000f6	78		 DB	 120			; 00000078H
  000f7	00		 DB	 0
$LN3@config_rea:
  000f8	73		 DB	 115			; 00000073H
  000f9	63		 DB	 99			; 00000063H
  000fa	61		 DB	 97			; 00000061H
  000fb	6e		 DB	 110			; 0000006eH
  000fc	6e		 DB	 110			; 0000006eH
  000fd	65		 DB	 101			; 00000065H
  000fe	72		 DB	 114			; 00000072H
  000ff	00		 DB	 0
_config_read ENDP
_TEXT	ENDS
PUBLIC	??_C@_01GFHCPBMG@C?$AA@				; `string'
EXTRN	_setlocale:PROC
EXTRN	__configthreadlocale:PROC
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT
??_C@_01GFHCPBMG@C?$AA@ DB 'C', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ___config_locale_override
_TEXT	SEGMENT
___config_locale_override PROC				; COMDAT
; Line 80
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 84
  0001e	6a 01		 push	 1
  00020	e8 00 00 00 00	 call	 __configthreadlocale
  00025	83 c4 04	 add	 esp, 4
; Line 85
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_01GFHCPBMG@C?$AA@
  0002d	6a 04		 push	 4
  0002f	e8 00 00 00 00	 call	 _setlocale
  00034	83 c4 08	 add	 esp, 8
; Line 102
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
___config_locale_override ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_locale_restore
_TEXT	SEGMENT
___config_locale_restore PROC				; COMDAT
; Line 107
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 111
  0001e	6a 02		 push	 2
  00020	e8 00 00 00 00	 call	 __configthreadlocale
  00025	83 c4 04	 add	 esp, 4
; Line 123
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
___config_locale_restore ENDP
_TEXT	ENDS
PUBLIC	_config_write
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_write
_TEXT	SEGMENT
_config$ = 8						; size = 4
_stream$ = 12						; size = 4
_config_write PROC					; COMDAT
; Line 594
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 595
  0001e	e8 00 00 00 00	 call	 ___config_locale_override
; Line 597
  00023	6a 00		 push	 0
  00025	8b 45 0c	 mov	 eax, DWORD PTR _stream$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  0002c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ___config_write_setting
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 599
  00037	e8 00 00 00 00	 call	 ___config_locale_restore
; Line 600
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
_config_write ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_write_setting
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_stream$ = 12						; size = 4
_depth$ = 16						; size = 4
___config_write_setting PROC				; COMDAT
; Line 569
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 589
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
___config_write_setting ENDP
_TEXT	ENDS
PUBLIC	??_C@_02BMJICGCB@rt?$AA@			; `string'
PUBLIC	_config_read_file
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
;	COMDAT ??_C@_02BMJICGCB@rt?$AA@
CONST	SEGMENT
??_C@_02BMJICGCB@rt?$AA@ DB 'rt', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _config_read_file
_TEXT	SEGMENT
_f$ = -20						; size = 4
_ret$ = -8						; size = 4
_config$ = 8						; size = 4
_filename$ = 12						; size = 4
_config_read_file PROC					; COMDAT
; Line 605
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 607
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_02BMJICGCB@rt?$AA@
  00023	8b 45 0c	 mov	 eax, DWORD PTR _filename$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _fopen
  0002c	83 c4 08	 add	 esp, 8
  0002f	89 45 ec	 mov	 DWORD PTR _f$[ebp], eax
; Line 608
  00032	83 7d ec 00	 cmp	 DWORD PTR _f$[ebp], 0
  00036	75 10		 jne	 SHORT $LN1@config_rea@2
; Line 610
  00038	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  0003b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ___io_error
  00041	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
; Line 611
  00044	33 c0		 xor	 eax, eax
  00046	eb 22		 jmp	 SHORT $LN2@config_rea@2
$LN1@config_rea@2:
; Line 614
  00048	8b 45 ec	 mov	 eax, DWORD PTR _f$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 _config_read
  00055	83 c4 08	 add	 esp, 8
  00058	89 45 f8	 mov	 DWORD PTR _ret$[ebp], eax
; Line 615
  0005b	8b 45 ec	 mov	 eax, DWORD PTR _f$[ebp]
  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _fclose
  00064	83 c4 04	 add	 esp, 4
; Line 616
  00067	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]
$LN2@config_rea@2:
; Line 617
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00073	3b ec		 cmp	 ebp, esp
  00075	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
_config_read_file ENDP
_TEXT	ENDS
PUBLIC	_config_write_file
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_write_file
_TEXT	SEGMENT
_config$ = 8						; size = 4
_filename$ = 12						; size = 4
_config_write_file PROC					; COMDAT
; Line 622
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 635
  0001e	b8 01 00 00 00	 mov	 eax, 1
; Line 636
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_config_write_file ENDP
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_destroy
_TEXT	SEGMENT
_config$ = 8						; size = 4
_config_destroy PROC					; COMDAT
; Line 641
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 642
  0001e	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00021	8b 08		 mov	 ecx, DWORD PTR [eax]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ___config_setting_destroy
  00029	83 c4 04	 add	 esp, 4
; Line 644
  0002c	6a 14		 push	 20			; 00000014H
  0002e	6a 00		 push	 0
  00030	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 _memset
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 645
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
_config_destroy ENDP
_TEXT	ENDS
EXTRN	_free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ___config_setting_destroy
_TEXT	SEGMENT
_setting$ = 8						; size = 4
___config_setting_destroy PROC				; COMDAT
; Line 446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 447
  0001e	83 7d 08 00	 cmp	 DWORD PTR _setting$[ebp], 0
  00022	0f 84 ae 00 00
	00		 je	 $LN9@config_set
; Line 449
  00028	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0002b	83 38 00	 cmp	 DWORD PTR [eax], 0
  0002e	74 0e		 je	 SHORT $LN7@config_set
; Line 450
  00030	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 _free
  0003b	83 c4 04	 add	 esp, 4
$LN7@config_set:
; Line 452
  0003e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00041	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00045	83 f9 05	 cmp	 ecx, 5
  00048	75 11		 jne	 SHORT $LN6@config_set
; Line 453
  0004a	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _free
  00056	83 c4 04	 add	 esp, 4
; Line 455
  00059	eb 3c		 jmp	 SHORT $LN5@config_set
$LN6@config_set:
; Line 457
  0005b	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0005e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00062	83 f9 01	 cmp	 ecx, 1
  00065	74 18		 je	 SHORT $LN3@config_set
  00067	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0006a	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0006e	83 f9 07	 cmp	 ecx, 7
  00071	74 0c		 je	 SHORT $LN3@config_set
  00073	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00076	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0007a	83 f9 08	 cmp	 ecx, 8
  0007d	75 18		 jne	 SHORT $LN5@config_set
$LN3@config_set:
; Line 459
  0007f	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00082	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00086	74 0f		 je	 SHORT $LN5@config_set
; Line 460
  00088	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0008b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ___config_list_destroy
  00094	83 c4 04	 add	 esp, 4
$LN5@config_set:
; Line 463
  00097	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0009a	83 78 18 00	 cmp	 DWORD PTR [eax+24], 0
  0009e	74 2a		 je	 SHORT $LN1@config_set
  000a0	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000a3	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000a6	83 79 04 00	 cmp	 DWORD PTR [ecx+4], 0
  000aa	74 1e		 je	 SHORT $LN1@config_set
; Line 464
  000ac	8b f4		 mov	 esi, esp
  000ae	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b4	51		 push	 ecx
  000b5	8b 55 08	 mov	 edx, DWORD PTR _setting$[ebp]
  000b8	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000bb	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000be	ff d1		 call	 ecx
  000c0	83 c4 04	 add	 esp, 4
  000c3	3b f4		 cmp	 esi, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@config_set:
; Line 466
  000ca	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 _free
  000d3	83 c4 04	 add	 esp, 4
$LN9@config_set:
; Line 468
  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
  000d8	5b		 pop	 ebx
  000d9	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000df	3b ec		 cmp	 ebp, esp
  000e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
___config_setting_destroy ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_list_destroy
_TEXT	SEGMENT
_i$ = -20						; size = 4
_p$ = -8						; size = 4
_list$ = 8						; size = 4
___config_list_destroy PROC				; COMDAT
; Line 473
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 477
  0001e	83 7d 08 00	 cmp	 DWORD PTR _list$[ebp], 0
  00022	75 02		 jne	 SHORT $LN5@config_lis
; Line 478
  00024	eb 62		 jmp	 SHORT $LN6@config_lis
$LN5@config_lis:
; Line 480
  00026	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00029	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0002d	74 4d		 je	 SHORT $LN4@config_lis
; Line 482
  0002f	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00032	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00035	89 4d f8	 mov	 DWORD PTR _p$[ebp], ecx
  00038	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0003f	eb 12		 jmp	 SHORT $LN3@config_lis
$LN2@config_lis:
  00041	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00044	83 c0 04	 add	 eax, 4
  00047	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  0004d	83 c1 01	 add	 ecx, 1
  00050	89 4d ec	 mov	 DWORD PTR _i$[ebp], ecx
$LN3@config_lis:
  00053	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  00059	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005b	73 10		 jae	 SHORT $LN1@config_lis
; Line 483
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 ___config_setting_destroy
  00068	83 c4 04	 add	 esp, 4
  0006b	eb d4		 jmp	 SHORT $LN2@config_lis
$LN1@config_lis:
; Line 485
  0006d	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00070	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 _free
  00079	83 c4 04	 add	 esp, 4
$LN4@config_lis:
; Line 488
  0007c	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 _free
  00085	83 c4 04	 add	 esp, 4
$LN6@config_lis:
; Line 489
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00091	3b ec		 cmp	 ebp, esp
  00093	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00098	8b e5		 mov	 esp, ebp
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
___config_list_destroy ENDP
_TEXT	ENDS
EXTRN	_calloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_init
_TEXT	SEGMENT
_config$ = 8						; size = 4
_config_init PROC					; COMDAT
; Line 650
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 651
  0001e	6a 14		 push	 20			; 00000014H
  00020	6a 00		 push	 0
  00022	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _memset
  0002b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 653
  0002e	6a 01		 push	 1
  00030	6a 20		 push	 32			; 00000020H
  00032	e8 00 00 00 00	 call	 _calloc
  00037	83 c4 08	 add	 esp, 8
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  0003d	89 01		 mov	 DWORD PTR [ecx], eax
; Line 654
  0003f	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00042	8b 08		 mov	 ecx, DWORD PTR [eax]
  00044	ba 01 00 00 00	 mov	 edx, 1
  00049	66 89 51 04	 mov	 WORD PTR [ecx+4], dx
; Line 655
  0004d	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	8b 55 08	 mov	 edx, DWORD PTR _config$[ebp]
  00055	89 51 14	 mov	 DWORD PTR [ecx+20], edx
; Line 656
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_config_init ENDP
_TEXT	ENDS
PUBLIC	_config_set_auto_convert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_set_auto_convert
_TEXT	SEGMENT
_config$ = 8						; size = 4
_flag$ = 12						; size = 4
_config_set_auto_convert PROC				; COMDAT
; Line 661
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 662
  0001e	83 7d 0c 00	 cmp	 DWORD PTR _flag$[ebp], 0
  00022	74 11		 je	 SHORT $LN2@config_set@2
; Line 663
  00024	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	83 c9 01	 or	 ecx, 1
  0002d	8b 55 08	 mov	 edx, DWORD PTR _config$[ebp]
  00030	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 664
  00033	eb 0f		 jmp	 SHORT $LN3@config_set@2
$LN2@config_set@2:
; Line 665
  00035	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00038	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003b	83 e1 fe	 and	 ecx, -2			; fffffffeH
  0003e	8b 55 08	 mov	 edx, DWORD PTR _config$[ebp]
  00041	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
$LN3@config_set@2:
; Line 666
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	5b		 pop	 ebx
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_config_set_auto_convert ENDP
_TEXT	ENDS
PUBLIC	_config_get_auto_convert
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_get_auto_convert
_TEXT	SEGMENT
_config$ = 8						; size = 4
_config_get_auto_convert PROC				; COMDAT
; Line 671
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 672
  0001e	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00024	83 e0 01	 and	 eax, 1
  00027	f7 d8		 neg	 eax
  00029	1b c0		 sbb	 eax, eax
  0002b	f7 d8		 neg	 eax
; Line 673
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_config_get_auto_convert ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_int
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_int
_TEXT	SEGMENT
tv95 = -196						; size = 4
tv89 = -196						; size = 4
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_config_setting_get_int PROC				; COMDAT
; Line 709
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 710
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 02		 cmp	 DWORD PTR tv66[ebp], 2
  00032	74 14		 je	 SHORT $LN9@config_set@3
  00034	83 bd 3c ff ff
	ff 03		 cmp	 DWORD PTR tv66[ebp], 3
  0003b	74 13		 je	 SHORT $LN8@config_set@3
  0003d	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00044	74 64		 je	 SHORT $LN5@config_set@3
  00046	eb 7d		 jmp	 SHORT $LN3@config_set@3
$LN9@config_set@3:
; Line 713
  00048	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0004e	eb 77		 jmp	 SHORT $LN10@config_set@3
$LN8@config_set@3:
; Line 717
  00050	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00053	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv89[ebp], eax
  00059	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  0005f	83 79 0c 00	 cmp	 DWORD PTR [ecx+12], 0
  00063	7f 37		 jg	 SHORT $LN15@config_set@3
  00065	7c 0f		 jl	 SHORT $LN14@config_set@3
  00067	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv89[ebp]
  0006d	81 7a 08 ff ff
	ff 7f		 cmp	 DWORD PTR [edx+8], 2147483647 ; 7fffffffH
  00074	77 26		 ja	 SHORT $LN15@config_set@3
$LN14@config_set@3:
  00076	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00079	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv95[ebp], eax
  0007f	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv95[ebp]
  00085	83 79 0c ff	 cmp	 DWORD PTR [ecx+12], -1
  00089	7f 17		 jg	 SHORT $LN7@config_set@3
  0008b	7c 0f		 jl	 SHORT $LN15@config_set@3
  0008d	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv95[ebp]
  00093	81 7a 08 00 00
	00 80		 cmp	 DWORD PTR [edx+8], -2147483648 ; 80000000H
  0009a	73 06		 jae	 SHORT $LN7@config_set@3
$LN15@config_set@3:
; Line 718
  0009c	33 c0		 xor	 eax, eax
  0009e	eb 27		 jmp	 SHORT $LN10@config_set@3
; Line 719
  000a0	eb 08		 jmp	 SHORT $LN5@config_set@3
$LN7@config_set@3:
; Line 720
  000a2	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000a5	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000a8	eb 1d		 jmp	 SHORT $LN10@config_set@3
$LN5@config_set@3:
; Line 723
  000aa	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000ad	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000b0	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000b3	83 e2 01	 and	 edx, 1
  000b6	74 0d		 je	 SHORT $LN3@config_set@3
; Line 724
  000b8	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000bb	dd 40 08	 fld	 QWORD PTR [eax+8]
  000be	e8 00 00 00 00	 call	 __ftol2_sse
  000c3	eb 02		 jmp	 SHORT $LN10@config_set@3
$LN3@config_set@3:
; Line 729
  000c5	33 c0		 xor	 eax, eax
$LN10@config_set@3:
; Line 731
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
_config_setting_get_int ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_int64
EXTRN	__ftol2:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_int64
_TEXT	SEGMENT
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_config_setting_get_int64 PROC				; COMDAT
; Line 736
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 737
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 02		 cmp	 DWORD PTR tv66[ebp], 2
  00032	74 1f		 je	 SHORT $LN5@config_set@4
  00034	83 bd 3c ff ff
	ff 03		 cmp	 DWORD PTR tv66[ebp], 3
  0003b	74 0b		 je	 SHORT $LN6@config_set@4
  0003d	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00044	74 16		 je	 SHORT $LN4@config_set@4
  00046	eb 2f		 jmp	 SHORT $LN3@config_set@4
$LN6@config_set@4:
; Line 740
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  0004b	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0004e	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00051	eb 28		 jmp	 SHORT $LN7@config_set@4
$LN5@config_set@4:
; Line 743
  00053	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00056	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00059	99		 cdq
  0005a	eb 1f		 jmp	 SHORT $LN7@config_set@4
$LN4@config_set@4:
; Line 746
  0005c	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0005f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00062	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00065	83 e2 01	 and	 edx, 1
  00068	74 0d		 je	 SHORT $LN3@config_set@4
; Line 747
  0006a	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0006d	dd 40 08	 fld	 QWORD PTR [eax+8]
  00070	e8 00 00 00 00	 call	 __ftol2
  00075	eb 04		 jmp	 SHORT $LN7@config_set@4
$LN3@config_set@4:
; Line 752
  00077	33 c0		 xor	 eax, eax
  00079	33 d2		 xor	 edx, edx
$LN7@config_set@4:
; Line 754
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00084	3b ec		 cmp	 ebp, esp
  00086	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_config_setting_get_int64 ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_member
PUBLIC	_config_setting_lookup_int
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_lookup_int
_TEXT	SEGMENT
_member$ = -8						; size = 4
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_lookup_int PROC				; COMDAT
; Line 760
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 761
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_member
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
; Line 762
  00031	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@5
; Line 763
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_set@5
$LN2@config_set@5:
; Line 765
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 02	 cmp	 ecx, 2
  00045	74 04		 je	 SHORT $LN1@config_set@5
; Line 766
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_set@5
$LN1@config_set@5:
; Line 768
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_int
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 769
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_set@5:
; Line 770
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_setting_lookup_int ENDP
_TEXT	ENDS
PUBLIC	_config_setting_lookup_int64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_lookup_int64
_TEXT	SEGMENT
_member$ = -8						; size = 4
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_lookup_int64 PROC			; COMDAT
; Line 776
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 777
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_member
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
; Line 778
  00031	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@6
; Line 779
  00037	33 c0		 xor	 eax, eax
  00039	eb 29		 jmp	 SHORT $LN3@config_set@6
$LN2@config_set@6:
; Line 781
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 03	 cmp	 ecx, 3
  00045	74 04		 je	 SHORT $LN1@config_set@6
; Line 782
  00047	33 c0		 xor	 eax, eax
  00049	eb 19		 jmp	 SHORT $LN3@config_set@6
$LN1@config_set@6:
; Line 784
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_int64
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
  0005c	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 785
  0005f	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_set@6:
; Line 786
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
_config_setting_lookup_int64 ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_float
PUBLIC	_config_setting_lookup_float
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_lookup_float
_TEXT	SEGMENT
_member$ = -8						; size = 4
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_lookup_float PROC			; COMDAT
; Line 792
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 793
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_member
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
; Line 794
  00031	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@7
; Line 795
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_set@7
$LN2@config_set@7:
; Line 797
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 04	 cmp	 ecx, 4
  00045	74 04		 je	 SHORT $LN1@config_set@7
; Line 798
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_set@7
$LN1@config_set@7:
; Line 800
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_float
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	dd 19		 fstp	 QWORD PTR [ecx]
; Line 801
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_set@7:
; Line 802
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_setting_lookup_float ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_string
PUBLIC	_config_setting_lookup_string
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_lookup_string
_TEXT	SEGMENT
_member$ = -8						; size = 4
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_lookup_string PROC			; COMDAT
; Line 808
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 809
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_member
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
; Line 810
  00031	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@8
; Line 811
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_set@8
$LN2@config_set@8:
; Line 813
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 05	 cmp	 ecx, 5
  00045	74 04		 je	 SHORT $LN1@config_set@8
; Line 814
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_set@8
$LN1@config_set@8:
; Line 816
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_string
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 817
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_set@8:
; Line 818
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_setting_lookup_string ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_bool
PUBLIC	_config_setting_lookup_bool
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_lookup_bool
_TEXT	SEGMENT
_member$ = -8						; size = 4
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_lookup_bool PROC			; COMDAT
; Line 824
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 825
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_member
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
; Line 826
  00031	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@9
; Line 827
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_set@9
$LN2@config_set@9:
; Line 829
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 06	 cmp	 ecx, 6
  00045	74 04		 je	 SHORT $LN1@config_set@9
; Line 830
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_set@9
$LN1@config_set@9:
; Line 832
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_bool
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 833
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_set@9:
; Line 834
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_setting_lookup_bool ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_int
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_int
_TEXT	SEGMENT
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_value$ = 12						; size = 4
_config_setting_set_int PROC				; COMDAT
; Line 839
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 840
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 00		 cmp	 DWORD PTR tv66[ebp], 0
  00032	74 14		 je	 SHORT $LN6@config_set@10
  00034	83 bd 3c ff ff
	ff 02		 cmp	 DWORD PTR tv66[ebp], 2
  0003b	74 17		 je	 SHORT $LN5@config_set@10
  0003d	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00044	74 1e		 je	 SHORT $LN4@config_set@10
  00046	eb 45		 jmp	 SHORT $LN2@config_set@10
$LN6@config_set@10:
; Line 843
  00048	b8 02 00 00 00	 mov	 eax, 2
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00050	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
$LN5@config_set@10:
; Line 847
  00054	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00057	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 848
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	eb 2b		 jmp	 SHORT $LN7@config_set@10
$LN4@config_set@10:
; Line 851
  00064	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00067	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 _config_get_auto_convert
  00070	83 c4 04	 add	 esp, 4
  00073	85 c0		 test	 eax, eax
  00075	74 12		 je	 SHORT $LN3@config_set@10
; Line 853
  00077	db 45 0c	 fild	 DWORD PTR _value$[ebp]
  0007a	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0007d	dd 58 08	 fstp	 QWORD PTR [eax+8]
; Line 854
  00080	b8 01 00 00 00	 mov	 eax, 1
  00085	eb 08		 jmp	 SHORT $LN7@config_set@10
; Line 856
  00087	eb 04		 jmp	 SHORT $LN2@config_set@10
$LN3@config_set@10:
; Line 857
  00089	33 c0		 xor	 eax, eax
  0008b	eb 02		 jmp	 SHORT $LN7@config_set@10
$LN2@config_set@10:
; Line 860
  0008d	33 c0		 xor	 eax, eax
$LN7@config_set@10:
; Line 862
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
  00092	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  00098	3b ec		 cmp	 ebp, esp
  0009a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
_config_setting_set_int ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_int64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_int64
_TEXT	SEGMENT
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_value$ = 12						; size = 8
_config_setting_set_int64 PROC				; COMDAT
; Line 867
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 868
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00032	0f 87 96 00 00
	00		 ja	 $LN2@config_set@11
  00038	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  0003e	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN17@config_set@11[edx*4]
$LN10@config_set@11:
; Line 871
  00045	b8 03 00 00 00	 mov	 eax, 3
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  0004d	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
$LN9@config_set@11:
; Line 875
  00051	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  00057	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0005a	8b 55 10	 mov	 edx, DWORD PTR _value$[ebp+4]
  0005d	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 876
  00060	b8 01 00 00 00	 mov	 eax, 1
  00065	eb 69		 jmp	 SHORT $LN11@config_set@11
$LN8@config_set@11:
; Line 879
  00067	83 7d 10 00	 cmp	 DWORD PTR _value$[ebp+4], 0
  0006b	7f 1c		 jg	 SHORT $LN16@config_set@11
  0006d	7c 09		 jl	 SHORT $LN15@config_set@11
  0006f	81 7d 0c ff ff
	ff 7f		 cmp	 DWORD PTR _value$[ebp], 2147483647 ; 7fffffffH
  00076	77 11		 ja	 SHORT $LN16@config_set@11
$LN15@config_set@11:
  00078	83 7d 10 ff	 cmp	 DWORD PTR _value$[ebp+4], -1
  0007c	7f 17		 jg	 SHORT $LN7@config_set@11
  0007e	7c 09		 jl	 SHORT $LN16@config_set@11
  00080	81 7d 0c 00 00
	00 80		 cmp	 DWORD PTR _value$[ebp], -2147483648 ; 80000000H
  00087	73 0c		 jae	 SHORT $LN7@config_set@11
$LN16@config_set@11:
; Line 880
  00089	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0008c	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 881
  00093	eb 09		 jmp	 SHORT $LN5@config_set@11
$LN7@config_set@11:
; Line 882
  00095	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  0009b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN5@config_set@11:
; Line 883
  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 2b		 jmp	 SHORT $LN11@config_set@11
$LN4@config_set@11:
; Line 886
  000a5	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000a8	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000ab	51		 push	 ecx
  000ac	e8 00 00 00 00	 call	 _config_get_auto_convert
  000b1	83 c4 04	 add	 esp, 4
  000b4	85 c0		 test	 eax, eax
  000b6	74 12		 je	 SHORT $LN3@config_set@11
; Line 888
  000b8	df 6d 0c	 fild	 QWORD PTR _value$[ebp]
  000bb	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  000be	dd 58 08	 fstp	 QWORD PTR [eax+8]
; Line 889
  000c1	b8 01 00 00 00	 mov	 eax, 1
  000c6	eb 08		 jmp	 SHORT $LN11@config_set@11
; Line 891
  000c8	eb 04		 jmp	 SHORT $LN2@config_set@11
$LN3@config_set@11:
; Line 892
  000ca	33 c0		 xor	 eax, eax
  000cc	eb 02		 jmp	 SHORT $LN11@config_set@11
$LN2@config_set@11:
; Line 895
  000ce	33 c0		 xor	 eax, eax
$LN11@config_set@11:
; Line 897
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
  000d3	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  000d9	3b ec		 cmp	 ebp, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	8b e5		 mov	 esp, ebp
  000e2	5d		 pop	 ebp
  000e3	c3		 ret	 0
$LN17@config_set@11:
  000e4	00 00 00 00	 DD	 $LN10@config_set@11
  000e8	00 00 00 00	 DD	 $LN2@config_set@11
  000ec	00 00 00 00	 DD	 $LN8@config_set@11
  000f0	00 00 00 00	 DD	 $LN9@config_set@11
  000f4	00 00 00 00	 DD	 $LN4@config_set@11
_config_setting_set_int64 ENDP
_TEXT	ENDS
PUBLIC	__real@0000000000000000
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _config_setting_get_float
_TEXT	SEGMENT
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_config_setting_get_float PROC				; COMDAT
; Line 902
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 903
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 02		 cmp	 DWORD PTR tv66[ebp], 2
  00032	74 1c		 je	 SHORT $LN7@config_set@12
  00034	83 bd 3c ff ff
	ff 03		 cmp	 DWORD PTR tv66[ebp], 3
  0003b	74 34		 je	 SHORT $LN5@config_set@12
  0003d	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00044	74 02		 je	 SHORT $LN8@config_set@12
  00046	eb 4a		 jmp	 SHORT $LN2@config_set@12
$LN8@config_set@12:
; Line 906
  00048	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004b	dd 40 08	 fld	 QWORD PTR [eax+8]
  0004e	eb 44		 jmp	 SHORT $LN9@config_set@12
$LN7@config_set@12:
; Line 909
  00050	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00053	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 _config_get_auto_convert
  0005c	83 c4 04	 add	 esp, 4
  0005f	85 c0		 test	 eax, eax
  00061	74 0a		 je	 SHORT $LN6@config_set@12
; Line 910
  00063	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00066	db 40 08	 fild	 DWORD PTR [eax+8]
  00069	eb 29		 jmp	 SHORT $LN9@config_set@12
; Line 911
  0006b	eb 04		 jmp	 SHORT $LN5@config_set@12
$LN6@config_set@12:
; Line 912
  0006d	d9 ee		 fldz
  0006f	eb 23		 jmp	 SHORT $LN9@config_set@12
$LN5@config_set@12:
; Line 915
  00071	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00074	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 _config_get_auto_convert
  0007d	83 c4 04	 add	 esp, 4
  00080	85 c0		 test	 eax, eax
  00082	74 0a		 je	 SHORT $LN3@config_set@12
; Line 916
  00084	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00087	df 68 08	 fild	 QWORD PTR [eax+8]
  0008a	eb 08		 jmp	 SHORT $LN9@config_set@12
; Line 917
  0008c	eb 04		 jmp	 SHORT $LN2@config_set@12
$LN3@config_set@12:
; Line 918
  0008e	d9 ee		 fldz
  00090	eb 02		 jmp	 SHORT $LN9@config_set@12
$LN2@config_set@12:
; Line 921
  00092	d9 ee		 fldz
$LN9@config_set@12:
; Line 923
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
_config_setting_get_float ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_float
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_float
_TEXT	SEGMENT
tv66 = -196						; size = 4
_setting$ = 8						; size = 4
_value$ = 12						; size = 8
_config_setting_set_float PROC				; COMDAT
; Line 928
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 929
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0002b	83 bd 3c ff ff
	ff 04		 cmp	 DWORD PTR tv66[ebp], 4
  00032	77 7e		 ja	 SHORT $LN2@config_set@13
  00034	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  0003a	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN14@config_set@13[edx*4]
$LN9@config_set@13:
; Line 932
  00041	b8 04 00 00 00	 mov	 eax, 4
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00049	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
$LN8@config_set@13:
; Line 936
  0004d	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00050	dd 45 0c	 fld	 QWORD PTR _value$[ebp]
  00053	dd 58 08	 fstp	 QWORD PTR [eax+8]
; Line 937
  00056	b8 01 00 00 00	 mov	 eax, 1
  0005b	eb 57		 jmp	 SHORT $LN10@config_set@13
$LN7@config_set@13:
; Line 940
  0005d	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00060	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00063	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00066	83 e2 01	 and	 edx, 1
  00069	74 17		 je	 SHORT $LN6@config_set@13
; Line 942
  0006b	dd 45 0c	 fld	 QWORD PTR _value$[ebp]
  0006e	e8 00 00 00 00	 call	 __ftol2_sse
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00076	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 943
  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	eb 34		 jmp	 SHORT $LN10@config_set@13
; Line 945
  00080	eb 04		 jmp	 SHORT $LN5@config_set@13
$LN6@config_set@13:
; Line 946
  00082	33 c0		 xor	 eax, eax
  00084	eb 2e		 jmp	 SHORT $LN10@config_set@13
$LN5@config_set@13:
; Line 949
  00086	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00089	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0008c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0008f	83 e2 01	 and	 edx, 1
  00092	74 1a		 je	 SHORT $LN3@config_set@13
; Line 951
  00094	dd 45 0c	 fld	 QWORD PTR _value$[ebp]
  00097	e8 00 00 00 00	 call	 __ftol2
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  0009f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  000a2	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
; Line 952
  000a5	b8 01 00 00 00	 mov	 eax, 1
  000aa	eb 08		 jmp	 SHORT $LN10@config_set@13
; Line 954
  000ac	eb 04		 jmp	 SHORT $LN2@config_set@13
$LN3@config_set@13:
; Line 955
  000ae	33 c0		 xor	 eax, eax
  000b0	eb 02		 jmp	 SHORT $LN10@config_set@13
$LN2@config_set@13:
; Line 958
  000b2	33 c0		 xor	 eax, eax
$LN10@config_set@13:
; Line 960
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
  000b7	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c3		 ret	 0
$LN14@config_set@13:
  000c8	00 00 00 00	 DD	 $LN9@config_set@13
  000cc	00 00 00 00	 DD	 $LN2@config_set@13
  000d0	00 00 00 00	 DD	 $LN7@config_set@13
  000d4	00 00 00 00	 DD	 $LN5@config_set@13
  000d8	00 00 00 00	 DD	 $LN8@config_set@13
_config_setting_set_float ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _config_setting_get_bool
_TEXT	SEGMENT
tv68 = -196						; size = 4
_setting$ = 8						; size = 4
_config_setting_get_bool PROC				; COMDAT
; Line 965
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 966
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 06	 cmp	 ecx, 6
  00028	75 0e		 jne	 SHORT $LN3@config_set@14
  0002a	8b 55 08	 mov	 edx, DWORD PTR _setting$[ebp]
  0002d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00030	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00036	eb 0a		 jmp	 SHORT $LN4@config_set@14
$LN3@config_set@14:
  00038	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@config_set@14:
  00042	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]
; Line 967
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_config_setting_get_bool ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_bool
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_bool
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_value$ = 12						; size = 4
_config_setting_set_bool PROC				; COMDAT
; Line 972
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 973
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	85 c9		 test	 ecx, ecx
  00027	75 0e		 jne	 SHORT $LN3@config_set@15
; Line 974
  00029	b8 06 00 00 00	 mov	 eax, 6
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00031	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
  00035	eb 10		 jmp	 SHORT $LN2@config_set@15
$LN3@config_set@15:
; Line 975
  00037	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0003a	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003e	83 f9 06	 cmp	 ecx, 6
  00041	74 04		 je	 SHORT $LN2@config_set@15
; Line 976
  00043	33 c0		 xor	 eax, eax
  00045	eb 0e		 jmp	 SHORT $LN4@config_set@15
$LN2@config_set@15:
; Line 978
  00047	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004a	8b 4d 0c	 mov	 ecx, DWORD PTR _value$[ebp]
  0004d	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 979
  00050	b8 01 00 00 00	 mov	 eax, 1
$LN4@config_set@15:
; Line 980
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_config_setting_set_bool ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _config_setting_get_string
_TEXT	SEGMENT
tv68 = -196						; size = 4
_setting$ = 8						; size = 4
_config_setting_get_string PROC				; COMDAT
; Line 985
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 986
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 05	 cmp	 ecx, 5
  00028	75 0e		 jne	 SHORT $LN3@config_set@16
  0002a	8b 55 08	 mov	 edx, DWORD PTR _setting$[ebp]
  0002d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00030	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  00036	eb 0a		 jmp	 SHORT $LN4@config_set@16
$LN3@config_set@16:
  00038	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN4@config_set@16:
  00042	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]
; Line 987
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_config_setting_get_string ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_string
EXTRN	_strdup:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_string
_TEXT	SEGMENT
tv79 = -196						; size = 4
_setting$ = 8						; size = 4
_value$ = 12						; size = 4
_config_setting_set_string PROC				; COMDAT
; Line 992
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 993
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	85 c9		 test	 ecx, ecx
  00027	75 0e		 jne	 SHORT $LN4@config_set@17
; Line 994
  00029	b8 05 00 00 00	 mov	 eax, 5
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00031	66 89 41 04	 mov	 WORD PTR [ecx+4], ax
  00035	eb 10		 jmp	 SHORT $LN3@config_set@17
$LN4@config_set@17:
; Line 995
  00037	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0003a	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003e	83 f9 05	 cmp	 ecx, 5
  00041	74 04		 je	 SHORT $LN3@config_set@17
; Line 996
  00043	33 c0		 xor	 eax, eax
  00045	eb 4d		 jmp	 SHORT $LN5@config_set@17
$LN3@config_set@17:
; Line 998
  00047	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0004e	74 0f		 je	 SHORT $LN1@config_set@17
; Line 999
  00050	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00053	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00056	51		 push	 ecx
  00057	e8 00 00 00 00	 call	 _free
  0005c	83 c4 04	 add	 esp, 4
$LN1@config_set@17:
; Line 1001
  0005f	83 7d 0c 00	 cmp	 DWORD PTR _value$[ebp], 0
  00063	75 0c		 jne	 SHORT $LN7@config_set@17
  00065	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv79[ebp], 0
  0006f	eb 12		 jmp	 SHORT $LN8@config_set@17
$LN7@config_set@17:
  00071	8b 45 0c	 mov	 eax, DWORD PTR _value$[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 _strdup
  0007a	83 c4 04	 add	 esp, 4
  0007d	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv79[ebp], eax
$LN8@config_set@17:
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00086	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv79[ebp]
  0008c	89 51 08	 mov	 DWORD PTR [ecx+8], edx
; Line 1002
  0008f	b8 01 00 00 00	 mov	 eax, 1
$LN5@config_set@17:
; Line 1003
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  0009d	3b ec		 cmp	 ebp, esp
  0009f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
_config_setting_set_string ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_format
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_format$ = 12						; size = 2
_config_setting_set_format PROC				; COMDAT
; Line 1008
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1011
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 02	 cmp	 ecx, 2
  00028	74 0c		 je	 SHORT $LN1@config_set@18
  0002a	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0002d	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00031	83 f9 03	 cmp	 ecx, 3
  00034	75 11		 jne	 SHORT $LN2@config_set@18
$LN1@config_set@18:
  00036	0f bf 45 0c	 movsx	 eax, WORD PTR _format$[ebp]
  0003a	85 c0		 test	 eax, eax
  0003c	74 0d		 je	 SHORT $LN3@config_set@18
  0003e	0f bf 45 0c	 movsx	 eax, WORD PTR _format$[ebp]
  00042	83 f8 01	 cmp	 eax, 1
  00045	74 04		 je	 SHORT $LN3@config_set@18
$LN2@config_set@18:
; Line 1012
  00047	33 c0		 xor	 eax, eax
  00049	eb 10		 jmp	 SHORT $LN4@config_set@18
$LN3@config_set@18:
; Line 1014
  0004b	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0004e	66 8b 4d 0c	 mov	 cx, WORD PTR _format$[ebp]
  00052	66 89 48 06	 mov	 WORD PTR [eax+6], cx
; Line 1016
  00056	b8 01 00 00 00	 mov	 eax, 1
$LN4@config_set@18:
; Line 1017
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_config_setting_set_format ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_format
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_format
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_config_setting_get_format PROC				; COMDAT
; Line 1022
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1023
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
; Line 1024
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_config_setting_get_format ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_elem
PUBLIC	??_C@_03GBOCGLKB@?3?4?1?$AA@			; `string'
PUBLIC	_config_lookup
EXTRN	_atoi:PROC
EXTRN	_strchr:PROC
;	COMDAT ??_C@_03GBOCGLKB@?3?4?1?$AA@
CONST	SEGMENT
??_C@_03GBOCGLKB@?3?4?1?$AA@ DB ':./', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _config_lookup
_TEXT	SEGMENT
tv94 = -232						; size = 4
_found$ = -32						; size = 4
_setting$ = -20						; size = 4
_p$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_config_lookup PROC					; COMDAT
; Line 1029
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1030
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
; Line 1031
  00024	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00027	8b 08		 mov	 ecx, DWORD PTR [eax]
  00029	89 4d ec	 mov	 DWORD PTR _setting$[ebp], ecx
$LN8@config_loo:
; Line 1035
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0002f	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00032	85 c9		 test	 ecx, ecx
  00034	74 23		 je	 SHORT $LN7@config_loo
  00036	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00039	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0003c	51		 push	 ecx
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_03GBOCGLKB@?3?4?1?$AA@
  00042	e8 00 00 00 00	 call	 _strchr
  00047	83 c4 08	 add	 esp, 8
  0004a	85 c0		 test	 eax, eax
  0004c	74 0b		 je	 SHORT $LN7@config_loo
; Line 1036
  0004e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00051	83 c0 01	 add	 eax, 1
  00054	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  00057	eb d3		 jmp	 SHORT $LN8@config_loo
$LN7@config_loo:
; Line 1038
  00059	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0005c	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0005f	85 c9		 test	 ecx, ecx
  00061	75 02		 jne	 SHORT $LN6@config_loo
; Line 1039
  00063	eb 7b		 jmp	 SHORT $LN9@config_loo
$LN6@config_loo:
; Line 1041
  00065	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00068	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0006b	83 f9 5b	 cmp	 ecx, 91			; 0000005bH
  0006e	75 27		 jne	 SHORT $LN5@config_loo
; Line 1042
  00070	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00073	83 c0 01	 add	 eax, 1
  00076	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _p$[ebp]
  0007c	51		 push	 ecx
  0007d	e8 00 00 00 00	 call	 _atoi
  00082	83 c4 04	 add	 esp, 4
  00085	50		 push	 eax
  00086	8b 55 ec	 mov	 edx, DWORD PTR _setting$[ebp]
  00089	52		 push	 edx
  0008a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0008f	83 c4 08	 add	 esp, 8
  00092	89 45 e0	 mov	 DWORD PTR _found$[ebp], eax
; Line 1043
  00095	eb 13		 jmp	 SHORT $LN4@config_loo
$LN5@config_loo:
; Line 1044
  00097	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d ec	 mov	 ecx, DWORD PTR _setting$[ebp]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 _config_setting_get_member
  000a4	83 c4 08	 add	 esp, 8
  000a7	89 45 e0	 mov	 DWORD PTR _found$[ebp], eax
$LN4@config_loo:
; Line 1046
  000aa	83 7d e0 00	 cmp	 DWORD PTR _found$[ebp], 0
  000ae	75 02		 jne	 SHORT $LN3@config_loo
; Line 1047
  000b0	eb 2e		 jmp	 SHORT $LN9@config_loo
$LN3@config_loo:
; Line 1049
  000b2	8b 45 e0	 mov	 eax, DWORD PTR _found$[ebp]
  000b5	89 45 ec	 mov	 DWORD PTR _setting$[ebp], eax
$LN2@config_loo:
; Line 1051
  000b8	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000bb	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000be	51		 push	 ecx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_03GBOCGLKB@?3?4?1?$AA@
  000c4	e8 00 00 00 00	 call	 _strchr
  000c9	83 c4 08	 add	 esp, 8
  000cc	85 c0		 test	 eax, eax
  000ce	75 0b		 jne	 SHORT $LN1@config_loo
; Line 1052
  000d0	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000d3	83 c0 01	 add	 eax, 1
  000d6	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  000d9	eb dd		 jmp	 SHORT $LN2@config_loo
$LN1@config_loo:
; Line 1053
  000db	e9 4c ff ff ff	 jmp	 $LN8@config_loo
$LN9@config_loo:
; Line 1055
  000e0	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000e3	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000e6	85 c9		 test	 ecx, ecx
  000e8	74 0c		 je	 SHORT $LN13@config_loo
  000ea	c7 85 18 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
  000f4	eb 09		 jmp	 SHORT $LN14@config_loo
$LN13@config_loo:
  000f6	8b 55 ec	 mov	 edx, DWORD PTR _setting$[ebp]
  000f9	89 95 18 ff ff
	ff		 mov	 DWORD PTR tv94[ebp], edx
$LN14@config_loo:
  000ff	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
; Line 1056
  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0010e	3b ec		 cmp	 ebp, esp
  00110	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
_config_lookup ENDP
_TEXT	ENDS
PUBLIC	_config_lookup_string
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_lookup_string
_TEXT	SEGMENT
_s$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_value$ = 16						; size = 4
_config_lookup_string PROC				; COMDAT
; Line 1062
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1063
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_lookup
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
; Line 1064
  00031	83 7d f8 00	 cmp	 DWORD PTR _s$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_loo@2
; Line 1065
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_loo@2
$LN2@config_loo@2:
; Line 1067
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 05	 cmp	 ecx, 5
  00045	74 04		 je	 SHORT $LN1@config_loo@2
; Line 1068
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_loo@2
$LN1@config_loo@2:
; Line 1070
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_string
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 1072
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_loo@2:
; Line 1073
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_lookup_string ENDP
_TEXT	ENDS
PUBLIC	_config_lookup_int
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_lookup_int
_TEXT	SEGMENT
_s$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_value$ = 16						; size = 4
_config_lookup_int PROC					; COMDAT
; Line 1079
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1080
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_lookup
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
; Line 1081
  00031	83 7d f8 00	 cmp	 DWORD PTR _s$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_loo@3
; Line 1082
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_loo@3
$LN2@config_loo@3:
; Line 1084
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 02	 cmp	 ecx, 2
  00045	74 04		 je	 SHORT $LN1@config_loo@3
; Line 1085
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_loo@3
$LN1@config_loo@3:
; Line 1087
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_int
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 1089
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_loo@3:
; Line 1090
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_lookup_int ENDP
_TEXT	ENDS
PUBLIC	_config_lookup_int64
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_lookup_int64
_TEXT	SEGMENT
_s$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_value$ = 16						; size = 4
_config_lookup_int64 PROC				; COMDAT
; Line 1096
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1097
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_lookup
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
; Line 1098
  00031	83 7d f8 00	 cmp	 DWORD PTR _s$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_loo@4
; Line 1099
  00037	33 c0		 xor	 eax, eax
  00039	eb 29		 jmp	 SHORT $LN3@config_loo@4
$LN2@config_loo@4:
; Line 1101
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 03	 cmp	 ecx, 3
  00045	74 04		 je	 SHORT $LN1@config_loo@4
; Line 1102
  00047	33 c0		 xor	 eax, eax
  00049	eb 19		 jmp	 SHORT $LN3@config_loo@4
$LN1@config_loo@4:
; Line 1104
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_int64
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
  0005c	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 1106
  0005f	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_loo@4:
; Line 1107
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
_config_lookup_int64 ENDP
_TEXT	ENDS
PUBLIC	_config_lookup_float
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_lookup_float
_TEXT	SEGMENT
_s$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_value$ = 16						; size = 4
_config_lookup_float PROC				; COMDAT
; Line 1113
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1114
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_lookup
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
; Line 1115
  00031	83 7d f8 00	 cmp	 DWORD PTR _s$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_loo@5
; Line 1116
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_loo@5
$LN2@config_loo@5:
; Line 1118
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 04	 cmp	 ecx, 4
  00045	74 04		 je	 SHORT $LN1@config_loo@5
; Line 1119
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_loo@5
$LN1@config_loo@5:
; Line 1121
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_float
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	dd 19		 fstp	 QWORD PTR [ecx]
; Line 1122
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_loo@5:
; Line 1123
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_lookup_float ENDP
_TEXT	ENDS
PUBLIC	_config_lookup_bool
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_lookup_bool
_TEXT	SEGMENT
_s$ = -8						; size = 4
_config$ = 8						; size = 4
_path$ = 12						; size = 4
_value$ = 16						; size = 4
_config_lookup_bool PROC				; COMDAT
; Line 1128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1129
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _path$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _config$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_lookup
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _s$[ebp], eax
; Line 1130
  00031	83 7d f8 00	 cmp	 DWORD PTR _s$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_loo@6
; Line 1131
  00037	33 c0		 xor	 eax, eax
  00039	eb 26		 jmp	 SHORT $LN3@config_loo@6
$LN2@config_loo@6:
; Line 1133
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 06	 cmp	 ecx, 6
  00045	74 04		 je	 SHORT $LN1@config_loo@6
; Line 1134
  00047	33 c0		 xor	 eax, eax
  00049	eb 16		 jmp	 SHORT $LN3@config_loo@6
$LN1@config_loo@6:
; Line 1136
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _s$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 _config_setting_get_bool
  00054	83 c4 04	 add	 esp, 4
  00057	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  0005a	89 01		 mov	 DWORD PTR [ecx], eax
; Line 1137
  0005c	b8 01 00 00 00	 mov	 eax, 1
$LN3@config_loo@6:
; Line 1138
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
  00064	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006a	3b ec		 cmp	 ebp, esp
  0006c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
_config_lookup_bool ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_int_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_int_elem
_TEXT	SEGMENT
tv70 = -208						; size = 4
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_int_elem PROC			; COMDAT
; Line 1143
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1144
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_elem
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1146
  00031	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00035	74 14		 je	 SHORT $LN3@config_set@19
  00037	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _config_setting_get_int
  00040	83 c4 04	 add	 esp, 4
  00043	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  00049	eb 0a		 jmp	 SHORT $LN4@config_set@19
$LN3@config_set@19:
  0004b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN4@config_set@19:
  00055	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv70[ebp]
; Line 1147
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
_config_setting_get_int_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_int_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_int_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_set_int_elem PROC			; COMDAT
; Line 1153
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1154
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _element$[ebp], 0
; Line 1156
  00025	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00028	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002c	83 f9 07	 cmp	 ecx, 7
  0002f	74 10		 je	 SHORT $LN6@config_set@20
  00031	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00034	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00038	83 f9 08	 cmp	 ecx, 8
  0003b	74 04		 je	 SHORT $LN6@config_set@20
; Line 1157
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 69		 jmp	 SHORT $LN7@config_set@20
$LN6@config_set@20:
; Line 1159
  00041	83 7d 0c 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00045	7d 2b		 jge	 SHORT $LN5@config_set@20
; Line 1161
  00047	6a 02		 push	 2
  00049	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___config_vector_checktype
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 04		 jne	 SHORT $LN4@config_set@20
; Line 1162
  00059	33 c0		 xor	 eax, eax
  0005b	eb 4d		 jmp	 SHORT $LN7@config_set@20
$LN4@config_set@20:
; Line 1164
  0005d	6a 02		 push	 2
  0005f	6a 00		 push	 0
  00061	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _config_setting_create
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1166
  00070	eb 1d		 jmp	 SHORT $LN3@config_set@20
$LN5@config_set@20:
; Line 1168
  00072	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0007f	83 c4 08	 add	 esp, 8
  00082	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1170
  00085	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00089	75 04		 jne	 SHORT $LN3@config_set@20
; Line 1171
  0008b	33 c0		 xor	 eax, eax
  0008d	eb 1b		 jmp	 SHORT $LN7@config_set@20
$LN3@config_set@20:
; Line 1174
  0008f	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
  00092	50		 push	 eax
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _element$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _config_setting_set_int
  0009c	83 c4 08	 add	 esp, 8
  0009f	85 c0		 test	 eax, eax
  000a1	75 04		 jne	 SHORT $LN1@config_set@20
; Line 1175
  000a3	33 c0		 xor	 eax, eax
  000a5	eb 03		 jmp	 SHORT $LN7@config_set@20
$LN1@config_set@20:
; Line 1177
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
$LN7@config_set@20:
; Line 1178
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_config_setting_set_int_elem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_vector_checktype
_TEXT	SEGMENT
_vector$ = 8						; size = 4
_type$ = 12						; size = 4
___config_vector_checktype PROC				; COMDAT
; Line 494
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 497
  0001e	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00021	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00025	75 07		 jne	 SHORT $LN3@config_vec
; Line 498
  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	eb 3c		 jmp	 SHORT $LN4@config_vec
$LN3@config_vec:
; Line 500
  0002e	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00031	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00034	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00037	75 07		 jne	 SHORT $LN2@config_vec
; Line 501
  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	eb 2a		 jmp	 SHORT $LN4@config_vec
$LN2@config_vec:
; Line 505
  00040	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00043	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00047	83 f9 08	 cmp	 ecx, 8
  0004a	75 07		 jne	 SHORT $LN1@config_vec
; Line 506
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	eb 17		 jmp	 SHORT $LN4@config_vec
$LN1@config_vec:
; Line 511
  00053	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00056	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00059	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0005c	8b 02		 mov	 eax, DWORD PTR [edx]
  0005e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00062	33 c0		 xor	 eax, eax
  00064	3b 4d 0c	 cmp	 ecx, DWORD PTR _type$[ebp]
  00067	0f 94 c0	 sete	 al
$LN4@config_vec:
; Line 512
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
___config_vector_checktype ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _config_setting_create
_TEXT	SEGMENT
tv80 = -220						; size = 4
_list$ = -20						; size = 4
_setting$ = -8						; size = 4
_parent$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_config_setting_create PROC				; COMDAT
; Line 679
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00012	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 685
  0001e	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 01	 cmp	 ecx, 1
  00028	74 1f		 je	 SHORT $LN2@config_set@21
  0002a	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0002d	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00031	83 f9 07	 cmp	 ecx, 7
  00034	74 13		 je	 SHORT $LN2@config_set@21
  00036	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00039	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003d	83 f9 08	 cmp	 ecx, 8
  00040	74 07		 je	 SHORT $LN2@config_set@21
; Line 686
  00042	33 c0		 xor	 eax, eax
  00044	e9 af 00 00 00	 jmp	 $LN3@config_set@21
$LN2@config_set@21:
; Line 688
  00049	6a 01		 push	 1
  0004b	6a 20		 push	 32			; 00000020H
  0004d	e8 00 00 00 00	 call	 _calloc
  00052	83 c4 08	 add	 esp, 8
  00055	89 45 f8	 mov	 DWORD PTR _setting$[ebp], eax
; Line 689
  00058	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  0005e	89 48 10	 mov	 DWORD PTR [eax+16], ecx
; Line 690
  00061	83 7d 0c 00	 cmp	 DWORD PTR _name$[ebp], 0
  00065	75 0c		 jne	 SHORT $LN5@config_set@21
  00067	c7 85 24 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
  00071	eb 12		 jmp	 SHORT $LN6@config_set@21
$LN5@config_set@21:
  00073	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 _strdup
  0007c	83 c4 04	 add	 esp, 4
  0007f	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv80[ebp], eax
$LN6@config_set@21:
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _setting$[ebp]
  00088	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR tv80[ebp]
  0008e	89 11		 mov	 DWORD PTR [ecx], edx
; Line 691
  00090	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  00093	66 8b 4d 10	 mov	 cx, WORD PTR _type$[ebp]
  00097	66 89 48 04	 mov	 WORD PTR [eax+4], cx
; Line 692
  0009b	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  0009e	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  000a1	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000a4	89 50 14	 mov	 DWORD PTR [eax+20], edx
; Line 693
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  000aa	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 694
  000b1	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  000b4	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; Line 696
  000bb	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  000be	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c1	89 4d ec	 mov	 DWORD PTR _list$[ebp], ecx
; Line 698
  000c4	83 7d ec 00	 cmp	 DWORD PTR _list$[ebp], 0
  000c8	75 1b		 jne	 SHORT $LN1@config_set@21
; Line 699
  000ca	6a 01		 push	 1
  000cc	6a 0c		 push	 12			; 0000000cH
  000ce	e8 00 00 00 00	 call	 _calloc
  000d3	83 c4 08	 add	 esp, 8
  000d6	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  000d9	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  000dc	8b 55 08	 mov	 edx, DWORD PTR _parent$[ebp]
  000df	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000e2	89 45 ec	 mov	 DWORD PTR _list$[ebp], eax
$LN1@config_set@21:
; Line 701
  000e5	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
  000e8	50		 push	 eax
  000e9	8b 4d ec	 mov	 ecx, DWORD PTR _list$[ebp]
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 ___config_list_add
  000f2	83 c4 08	 add	 esp, 8
; Line 703
  000f5	8b 45 f8	 mov	 eax, DWORD PTR _setting$[ebp]
$LN3@config_set@21:
; Line 704
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx
  000fb	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  00101	3b ec		 cmp	 ebp, esp
  00103	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
_config_setting_create ENDP
_TEXT	ENDS
EXTRN	_realloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ___config_list_add
_TEXT	SEGMENT
_list$ = 8						; size = 4
_setting$ = 12						; size = 4
___config_list_add PROC					; COMDAT
; Line 380
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 381
  0001e	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00021	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00029	75 2e		 jne	 SHORT $LN1@config_lis@2
; Line 383
  0002b	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0002e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00031	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00034	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00037	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
; Line 385
  0003a	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0003d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00040	c1 e1 02	 shl	 ecx, 2
  00043	51		 push	 ecx
  00044	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00047	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _realloc
  00050	83 c4 08	 add	 esp, 8
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _list$[ebp]
  00056	89 41 08	 mov	 DWORD PTR [ecx+8], eax
$LN1@config_lis@2:
; Line 388
  00059	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00061	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00064	8b 55 0c	 mov	 edx, DWORD PTR _setting$[ebp]
  00067	89 14 88	 mov	 DWORD PTR [eax+ecx*4], edx
; Line 389
  0006a	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0006d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006f	83 c1 01	 add	 ecx, 1
  00072	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00075	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 390
  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00080	3b ec		 cmp	 ebp, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
___config_list_add ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_int64_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_int64_elem
_TEXT	SEGMENT
tv70 = -212						; size = 8
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_int64_elem PROC			; COMDAT
; Line 1184
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00012	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1185
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_elem
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1187
  00031	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00035	74 1a		 je	 SHORT $LN3@config_set@22
  00037	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _config_setting_get_int64
  00040	83 c4 04	 add	 esp, 4
  00043	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], eax
  00049	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv70[ebp+4], edx
  0004f	eb 14		 jmp	 SHORT $LN4@config_set@22
$LN3@config_set@22:
  00051	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
  0005b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp+4], 0
$LN4@config_set@22:
  00065	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR tv70[ebp]
  0006b	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv70[ebp+4]
; Line 1188
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  0007a	3b ec		 cmp	 ebp, esp
  0007c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
_config_setting_get_int64_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_int64_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_int64_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_value$ = 16						; size = 8
_config_setting_set_int64_elem PROC			; COMDAT
; Line 1194
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1195
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _element$[ebp], 0
; Line 1197
  00025	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00028	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002c	83 f9 07	 cmp	 ecx, 7
  0002f	74 10		 je	 SHORT $LN6@config_set@23
  00031	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00034	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00038	83 f9 08	 cmp	 ecx, 8
  0003b	74 04		 je	 SHORT $LN6@config_set@23
; Line 1198
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 6d		 jmp	 SHORT $LN7@config_set@23
$LN6@config_set@23:
; Line 1200
  00041	83 7d 0c 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00045	7d 2b		 jge	 SHORT $LN5@config_set@23
; Line 1202
  00047	6a 03		 push	 3
  00049	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___config_vector_checktype
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 04		 jne	 SHORT $LN4@config_set@23
; Line 1203
  00059	33 c0		 xor	 eax, eax
  0005b	eb 51		 jmp	 SHORT $LN7@config_set@23
$LN4@config_set@23:
; Line 1205
  0005d	6a 03		 push	 3
  0005f	6a 00		 push	 0
  00061	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _config_setting_create
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1207
  00070	eb 1d		 jmp	 SHORT $LN3@config_set@23
$LN5@config_set@23:
; Line 1209
  00072	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0007f	83 c4 08	 add	 esp, 8
  00082	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1211
  00085	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00089	75 04		 jne	 SHORT $LN3@config_set@23
; Line 1212
  0008b	33 c0		 xor	 eax, eax
  0008d	eb 1f		 jmp	 SHORT $LN7@config_set@23
$LN3@config_set@23:
; Line 1215
  0008f	8b 45 14	 mov	 eax, DWORD PTR _value$[ebp+4]
  00092	50		 push	 eax
  00093	8b 4d 10	 mov	 ecx, DWORD PTR _value$[ebp]
  00096	51		 push	 ecx
  00097	8b 55 f8	 mov	 edx, DWORD PTR _element$[ebp]
  0009a	52		 push	 edx
  0009b	e8 00 00 00 00	 call	 _config_setting_set_int64
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a3	85 c0		 test	 eax, eax
  000a5	75 04		 jne	 SHORT $LN1@config_set@23
; Line 1216
  000a7	33 c0		 xor	 eax, eax
  000a9	eb 03		 jmp	 SHORT $LN7@config_set@23
$LN1@config_set@23:
; Line 1218
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
$LN7@config_set@23:
; Line 1219
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b7	3b ec		 cmp	 ebp, esp
  000b9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
_config_setting_set_int64_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_float_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_float_elem
_TEXT	SEGMENT
tv70 = -212						; size = 8
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_float_elem PROC			; COMDAT
; Line 1224
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 2c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-212]
  00012	b9 35 00 00 00	 mov	 ecx, 53			; 00000035H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1225
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_elem
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1227
  00031	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00035	74 14		 je	 SHORT $LN3@config_set@24
  00037	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _config_setting_get_float
  00040	83 c4 04	 add	 esp, 4
  00043	dd 9d 2c ff ff
	ff		 fstp	 QWORD PTR tv70[ebp]
  00049	eb 08		 jmp	 SHORT $LN4@config_set@24
$LN3@config_set@24:
  0004b	d9 ee		 fldz
  0004d	dd 9d 2c ff ff
	ff		 fstp	 QWORD PTR tv70[ebp]
$LN4@config_set@24:
  00053	dd 85 2c ff ff
	ff		 fld	 QWORD PTR tv70[ebp]
; Line 1228
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	81 c4 d4 00 00
	00		 add	 esp, 212		; 000000d4H
  00062	3b ec		 cmp	 ebp, esp
  00064	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
_config_setting_get_float_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_float_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_float_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_value$ = 16						; size = 8
_config_setting_set_float_elem PROC			; COMDAT
; Line 1234
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1235
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _element$[ebp], 0
; Line 1237
  00025	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00028	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002c	83 f9 07	 cmp	 ecx, 7
  0002f	74 10		 je	 SHORT $LN6@config_set@25
  00031	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00034	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00038	83 f9 08	 cmp	 ecx, 8
  0003b	74 04		 je	 SHORT $LN6@config_set@25
; Line 1238
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 6e		 jmp	 SHORT $LN7@config_set@25
$LN6@config_set@25:
; Line 1240
  00041	83 7d 0c 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00045	7d 2b		 jge	 SHORT $LN5@config_set@25
; Line 1242
  00047	6a 04		 push	 4
  00049	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___config_vector_checktype
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 04		 jne	 SHORT $LN4@config_set@25
; Line 1243
  00059	33 c0		 xor	 eax, eax
  0005b	eb 52		 jmp	 SHORT $LN7@config_set@25
$LN4@config_set@25:
; Line 1245
  0005d	6a 04		 push	 4
  0005f	6a 00		 push	 0
  00061	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _config_setting_create
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1247
  00070	eb 13		 jmp	 SHORT $LN3@config_set@25
$LN5@config_set@25:
; Line 1248
  00072	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0007f	83 c4 08	 add	 esp, 8
  00082	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
$LN3@config_set@25:
; Line 1250
  00085	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00089	75 04		 jne	 SHORT $LN2@config_set@25
; Line 1251
  0008b	33 c0		 xor	 eax, eax
  0008d	eb 20		 jmp	 SHORT $LN7@config_set@25
$LN2@config_set@25:
; Line 1253
  0008f	83 ec 08	 sub	 esp, 8
  00092	dd 45 10	 fld	 QWORD PTR _value$[ebp]
  00095	dd 1c 24	 fstp	 QWORD PTR [esp]
  00098	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 _config_setting_set_float
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	85 c0		 test	 eax, eax
  000a6	75 04		 jne	 SHORT $LN1@config_set@25
; Line 1254
  000a8	33 c0		 xor	 eax, eax
  000aa	eb 03		 jmp	 SHORT $LN7@config_set@25
$LN1@config_set@25:
; Line 1256
  000ac	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
$LN7@config_set@25:
; Line 1257
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b8	3b ec		 cmp	 ebp, esp
  000ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
_config_setting_set_float_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_bool_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_bool_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_bool_elem PROC			; COMDAT
; Line 1262
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1263
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_elem
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1265
  00031	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@26
; Line 1266
  00037	33 c0		 xor	 eax, eax
  00039	eb 16		 jmp	 SHORT $LN3@config_set@26
$LN2@config_set@26:
; Line 1268
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 06	 cmp	 ecx, 6
  00045	74 04		 je	 SHORT $LN1@config_set@26
; Line 1269
  00047	33 c0		 xor	 eax, eax
  00049	eb 06		 jmp	 SHORT $LN3@config_set@26
$LN1@config_set@26:
; Line 1271
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0004e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN3@config_set@26:
; Line 1272
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_config_setting_get_bool_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_bool_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_bool_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_set_bool_elem PROC			; COMDAT
; Line 1278
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1279
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _element$[ebp], 0
; Line 1281
  00025	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00028	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002c	83 f9 07	 cmp	 ecx, 7
  0002f	74 10		 je	 SHORT $LN6@config_set@27
  00031	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00034	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00038	83 f9 08	 cmp	 ecx, 8
  0003b	74 04		 je	 SHORT $LN6@config_set@27
; Line 1282
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 69		 jmp	 SHORT $LN7@config_set@27
$LN6@config_set@27:
; Line 1284
  00041	83 7d 0c 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00045	7d 2b		 jge	 SHORT $LN5@config_set@27
; Line 1286
  00047	6a 06		 push	 6
  00049	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___config_vector_checktype
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 04		 jne	 SHORT $LN4@config_set@27
; Line 1287
  00059	33 c0		 xor	 eax, eax
  0005b	eb 4d		 jmp	 SHORT $LN7@config_set@27
$LN4@config_set@27:
; Line 1289
  0005d	6a 06		 push	 6
  0005f	6a 00		 push	 0
  00061	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _config_setting_create
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1291
  00070	eb 13		 jmp	 SHORT $LN3@config_set@27
$LN5@config_set@27:
; Line 1292
  00072	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0007f	83 c4 08	 add	 esp, 8
  00082	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
$LN3@config_set@27:
; Line 1294
  00085	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00089	75 04		 jne	 SHORT $LN2@config_set@27
; Line 1295
  0008b	33 c0		 xor	 eax, eax
  0008d	eb 1b		 jmp	 SHORT $LN7@config_set@27
$LN2@config_set@27:
; Line 1297
  0008f	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
  00092	50		 push	 eax
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _element$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _config_setting_set_bool
  0009c	83 c4 08	 add	 esp, 8
  0009f	85 c0		 test	 eax, eax
  000a1	75 04		 jne	 SHORT $LN1@config_set@27
; Line 1298
  000a3	33 c0		 xor	 eax, eax
  000a5	eb 03		 jmp	 SHORT $LN7@config_set@27
$LN1@config_set@27:
; Line 1300
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
$LN7@config_set@27:
; Line 1301
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_config_setting_set_bool_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_get_string_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_get_string_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_string_elem PROC			; COMDAT
; Line 1307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1308
  0001e	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00025	51		 push	 ecx
  00026	e8 00 00 00 00	 call	 _config_setting_get_elem
  0002b	83 c4 08	 add	 esp, 8
  0002e	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1310
  00031	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00035	75 04		 jne	 SHORT $LN2@config_set@28
; Line 1311
  00037	33 c0		 xor	 eax, eax
  00039	eb 16		 jmp	 SHORT $LN3@config_set@28
$LN2@config_set@28:
; Line 1313
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0003e	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00042	83 f9 05	 cmp	 ecx, 5
  00045	74 04		 je	 SHORT $LN1@config_set@28
; Line 1314
  00047	33 c0		 xor	 eax, eax
  00049	eb 06		 jmp	 SHORT $LN3@config_set@28
$LN1@config_set@28:
; Line 1316
  0004b	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
  0004e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$LN3@config_set@28:
; Line 1317
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
  00053	5b		 pop	 ebx
  00054	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005a	3b ec		 cmp	 ebp, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
_config_setting_get_string_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_string_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_string_elem
_TEXT	SEGMENT
_element$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_value$ = 16						; size = 4
_config_setting_set_string_elem PROC			; COMDAT
; Line 1323
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1324
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _element$[ebp], 0
; Line 1326
  00025	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00028	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002c	83 f9 07	 cmp	 ecx, 7
  0002f	74 10		 je	 SHORT $LN6@config_set@29
  00031	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00034	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00038	83 f9 08	 cmp	 ecx, 8
  0003b	74 04		 je	 SHORT $LN6@config_set@29
; Line 1327
  0003d	33 c0		 xor	 eax, eax
  0003f	eb 69		 jmp	 SHORT $LN7@config_set@29
$LN6@config_set@29:
; Line 1329
  00041	83 7d 0c 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00045	7d 2b		 jge	 SHORT $LN5@config_set@29
; Line 1331
  00047	6a 05		 push	 5
  00049	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ___config_vector_checktype
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 04		 jne	 SHORT $LN4@config_set@29
; Line 1332
  00059	33 c0		 xor	 eax, eax
  0005b	eb 4d		 jmp	 SHORT $LN7@config_set@29
$LN4@config_set@29:
; Line 1334
  0005d	6a 05		 push	 5
  0005f	6a 00		 push	 0
  00061	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 _config_setting_create
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
; Line 1336
  00070	eb 13		 jmp	 SHORT $LN3@config_set@29
$LN5@config_set@29:
; Line 1337
  00072	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00075	50		 push	 eax
  00076	8b 4d 08	 mov	 ecx, DWORD PTR _vector$[ebp]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 _config_setting_get_elem
  0007f	83 c4 08	 add	 esp, 8
  00082	89 45 f8	 mov	 DWORD PTR _element$[ebp], eax
$LN3@config_set@29:
; Line 1339
  00085	83 7d f8 00	 cmp	 DWORD PTR _element$[ebp], 0
  00089	75 04		 jne	 SHORT $LN2@config_set@29
; Line 1340
  0008b	33 c0		 xor	 eax, eax
  0008d	eb 1b		 jmp	 SHORT $LN7@config_set@29
$LN2@config_set@29:
; Line 1342
  0008f	8b 45 10	 mov	 eax, DWORD PTR _value$[ebp]
  00092	50		 push	 eax
  00093	8b 4d f8	 mov	 ecx, DWORD PTR _element$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 _config_setting_set_string
  0009c	83 c4 08	 add	 esp, 8
  0009f	85 c0		 test	 eax, eax
  000a1	75 04		 jne	 SHORT $LN1@config_set@29
; Line 1343
  000a3	33 c0		 xor	 eax, eax
  000a5	eb 03		 jmp	 SHORT $LN7@config_set@29
$LN1@config_set@29:
; Line 1345
  000a7	8b 45 f8	 mov	 eax, DWORD PTR _element$[ebp]
$LN7@config_set@29:
; Line 1346
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000b3	3b ec		 cmp	 ebp, esp
  000b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ba	8b e5		 mov	 esp, ebp
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_config_setting_set_string_elem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _config_setting_get_elem
_TEXT	SEGMENT
_list$ = -8						; size = 4
_vector$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_get_elem PROC				; COMDAT
; Line 1352
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1353
  0001e	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00021	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00024	89 4d f8	 mov	 DWORD PTR _list$[ebp], ecx
; Line 1357
  00027	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  0002a	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002e	83 f9 07	 cmp	 ecx, 7
  00031	74 18		 je	 SHORT $LN2@config_set@30
  00033	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00036	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003a	83 f9 08	 cmp	 ecx, 8
  0003d	74 0c		 je	 SHORT $LN2@config_set@30
  0003f	8b 45 08	 mov	 eax, DWORD PTR _vector$[ebp]
  00042	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00046	83 f9 01	 cmp	 ecx, 1
  00049	75 06		 jne	 SHORT $LN3@config_set@30
$LN2@config_set@30:
  0004b	83 7d f8 00	 cmp	 DWORD PTR _list$[ebp], 0
  0004f	75 04		 jne	 SHORT $LN4@config_set@30
$LN3@config_set@30:
; Line 1358
  00051	33 c0		 xor	 eax, eax
  00053	eb 1a		 jmp	 SHORT $LN5@config_set@30
$LN4@config_set@30:
; Line 1360
  00055	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  00058	8b 4d 0c	 mov	 ecx, DWORD PTR _idx$[ebp]
  0005b	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005d	72 04		 jb	 SHORT $LN1@config_set@30
; Line 1361
  0005f	33 c0		 xor	 eax, eax
  00061	eb 0c		 jmp	 SHORT $LN5@config_set@30
$LN1@config_set@30:
; Line 1363
  00063	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  00066	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00069	8b 55 0c	 mov	 edx, DWORD PTR _idx$[ebp]
  0006c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
$LN5@config_set@30:
; Line 1364
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_config_setting_get_elem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _config_setting_get_member
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_name$ = 12						; size = 4
_config_setting_get_member PROC				; COMDAT
; Line 1370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1371
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 01	 cmp	 ecx, 1
  00028	74 04		 je	 SHORT $LN1@config_set@31
; Line 1372
  0002a	33 c0		 xor	 eax, eax
  0002c	eb 15		 jmp	 SHORT $LN2@config_set@31
$LN1@config_set@31:
; Line 1374
  0002e	6a 00		 push	 0
  00030	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00033	50		 push	 eax
  00034	8b 4d 08	 mov	 ecx, DWORD PTR _setting$[ebp]
  00037	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0003a	52		 push	 edx
  0003b	e8 00 00 00 00	 call	 ___config_list_search
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@config_set@31:
; Line 1375
  00043	5f		 pop	 edi
  00044	5e		 pop	 esi
  00045	5b		 pop	 ebx
  00046	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0004c	3b ec		 cmp	 ebp, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_config_setting_get_member ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_list_search
_TEXT	SEGMENT
_i$ = -20						; size = 4
_found$ = -8						; size = 4
_list$ = 8						; size = 4
_name$ = 12						; size = 4
_idx$ = 16						; size = 4
___config_list_search PROC				; COMDAT
; Line 397
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 398
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _found$[ebp], 0
; Line 401
  00025	83 7d 08 00	 cmp	 DWORD PTR _list$[ebp], 0
  00029	75 04		 jne	 SHORT $LN7@config_lis@3
; Line 402
  0002b	33 c0		 xor	 eax, eax
  0002d	eb 6b		 jmp	 SHORT $LN8@config_lis@3
$LN7@config_lis@3:
; Line 404
  0002f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00036	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00039	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003c	89 4d f8	 mov	 DWORD PTR _found$[ebp], ecx
  0003f	eb 12		 jmp	 SHORT $LN6@config_lis@3
$LN5@config_lis@3:
  00041	8b 45 ec	 mov	 eax, DWORD PTR _i$[ebp]
  00044	83 c0 01	 add	 eax, 1
  00047	89 45 ec	 mov	 DWORD PTR _i$[ebp], eax
  0004a	8b 4d f8	 mov	 ecx, DWORD PTR _found$[ebp]
  0004d	83 c1 04	 add	 ecx, 4
  00050	89 4d f8	 mov	 DWORD PTR _found$[ebp], ecx
$LN6@config_lis@3:
  00053	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00056	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  00059	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0005b	73 3b		 jae	 SHORT $LN4@config_lis@3
; Line 406
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _found$[ebp]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00065	75 02		 jne	 SHORT $LN3@config_lis@3
; Line 407
  00067	eb d8		 jmp	 SHORT $LN5@config_lis@3
$LN3@config_lis@3:
; Line 409
  00069	8b 45 f8	 mov	 eax, DWORD PTR _found$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	52		 push	 edx
  00071	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ___config_name_compare
  0007a	83 c4 08	 add	 esp, 8
  0007d	85 c0		 test	 eax, eax
  0007f	75 15		 jne	 SHORT $LN2@config_lis@3
; Line 411
  00081	83 7d 10 00	 cmp	 DWORD PTR _idx$[ebp], 0
  00085	74 08		 je	 SHORT $LN1@config_lis@3
; Line 412
  00087	8b 45 10	 mov	 eax, DWORD PTR _idx$[ebp]
  0008a	8b 4d ec	 mov	 ecx, DWORD PTR _i$[ebp]
  0008d	89 08		 mov	 DWORD PTR [eax], ecx
$LN1@config_lis@3:
; Line 414
  0008f	8b 45 f8	 mov	 eax, DWORD PTR _found$[ebp]
  00092	8b 00		 mov	 eax, DWORD PTR [eax]
  00094	eb 04		 jmp	 SHORT $LN8@config_lis@3
$LN2@config_lis@3:
; Line 416
  00096	eb a9		 jmp	 SHORT $LN5@config_lis@3
$LN4@config_lis@3:
; Line 418
  00098	33 c0		 xor	 eax, eax
$LN8@config_lis@3:
; Line 419
  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a3	3b ec		 cmp	 ebp, esp
  000a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
___config_list_search ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ___config_name_compare
_TEXT	SEGMENT
tv81 = -244						; size = 4
tv73 = -244						; size = 4
_qd$46816 = -44						; size = 4
_pd$46814 = -32						; size = 4
_q$ = -20						; size = 4
_p$ = -8						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
___config_name_compare PROC				; COMDAT
; Line 128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 00 00
	00		 sub	 esp, 244		; 000000f4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00012	b9 3d 00 00 00	 mov	 ecx, 61			; 0000003dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 131
  0001e	8b 45 08	 mov	 eax, DWORD PTR _a$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _b$[ebp]
  00027	89 4d ec	 mov	 DWORD PTR _q$[ebp], ecx
  0002a	eb 12		 jmp	 SHORT $LN12@config_nam
$LN11@config_nam:
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0002f	83 c0 01	 add	 eax, 1
  00032	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  00035	8b 4d ec	 mov	 ecx, DWORD PTR _q$[ebp]
  00038	83 c1 01	 add	 ecx, 1
  0003b	89 4d ec	 mov	 DWORD PTR _q$[ebp], ecx
$LN12@config_nam:
; Line 133
  0003e	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00041	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00044	85 c9		 test	 ecx, ecx
  00046	74 24		 je	 SHORT $LN15@config_nam
  00048	8b 55 f8	 mov	 edx, DWORD PTR _p$[ebp]
  0004b	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_03GBOCGLKB@?3?4?1?$AA@
  00054	e8 00 00 00 00	 call	 _strchr
  00059	83 c4 08	 add	 esp, 8
  0005c	85 c0		 test	 eax, eax
  0005e	75 0c		 jne	 SHORT $LN15@config_nam
  00060	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv73[ebp], 0
  0006a	eb 0a		 jmp	 SHORT $LN16@config_nam
$LN15@config_nam:
  0006c	c7 85 0c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv73[ebp], 1
$LN16@config_nam:
  00076	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv73[ebp]
  0007c	89 4d e0	 mov	 DWORD PTR _pd$46814[ebp], ecx
; Line 134
  0007f	8b 45 ec	 mov	 eax, DWORD PTR _q$[ebp]
  00082	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00085	85 c9		 test	 ecx, ecx
  00087	74 24		 je	 SHORT $LN17@config_nam
  00089	8b 55 ec	 mov	 edx, DWORD PTR _q$[ebp]
  0008c	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0008f	50		 push	 eax
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_03GBOCGLKB@?3?4?1?$AA@
  00095	e8 00 00 00 00	 call	 _strchr
  0009a	83 c4 08	 add	 esp, 8
  0009d	85 c0		 test	 eax, eax
  0009f	75 0c		 jne	 SHORT $LN17@config_nam
  000a1	c7 85 0c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
  000ab	eb 0a		 jmp	 SHORT $LN18@config_nam
$LN17@config_nam:
  000ad	c7 85 0c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv81[ebp], 1
$LN18@config_nam:
  000b7	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR tv81[ebp]
  000bd	89 4d d4	 mov	 DWORD PTR _qd$46816[ebp], ecx
; Line 136
  000c0	83 7d e0 00	 cmp	 DWORD PTR _pd$46814[ebp], 0
  000c4	74 0a		 je	 SHORT $LN9@config_nam
  000c6	83 7d d4 00	 cmp	 DWORD PTR _qd$46816[ebp], 0
  000ca	74 04		 je	 SHORT $LN9@config_nam
  000cc	eb 51		 jmp	 SHORT $LN10@config_nam
; Line 137
  000ce	eb 4a		 jmp	 SHORT $LN8@config_nam
$LN9@config_nam:
; Line 138
  000d0	83 7d e0 00	 cmp	 DWORD PTR _pd$46814[ebp], 0
  000d4	74 07		 je	 SHORT $LN7@config_nam
; Line 139
  000d6	83 c8 ff	 or	 eax, -1
  000d9	eb 46		 jmp	 SHORT $LN13@config_nam
  000db	eb 3d		 jmp	 SHORT $LN8@config_nam
$LN7@config_nam:
; Line 140
  000dd	83 7d d4 00	 cmp	 DWORD PTR _qd$46816[ebp], 0
  000e1	74 09		 je	 SHORT $LN5@config_nam
; Line 141
  000e3	b8 01 00 00 00	 mov	 eax, 1
  000e8	eb 37		 jmp	 SHORT $LN13@config_nam
  000ea	eb 2e		 jmp	 SHORT $LN8@config_nam
$LN5@config_nam:
; Line 142
  000ec	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  000ef	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000f2	8b 55 ec	 mov	 edx, DWORD PTR _q$[ebp]
  000f5	0f be 02	 movsx	 eax, BYTE PTR [edx]
  000f8	3b c8		 cmp	 ecx, eax
  000fa	7d 07		 jge	 SHORT $LN3@config_nam
; Line 143
  000fc	83 c8 ff	 or	 eax, -1
  000ff	eb 20		 jmp	 SHORT $LN13@config_nam
  00101	eb 17		 jmp	 SHORT $LN8@config_nam
$LN3@config_nam:
; Line 144
  00103	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00106	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00109	8b 55 ec	 mov	 edx, DWORD PTR _q$[ebp]
  0010c	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0010f	3b c8		 cmp	 ecx, eax
  00111	7e 07		 jle	 SHORT $LN8@config_nam
; Line 145
  00113	b8 01 00 00 00	 mov	 eax, 1
  00118	eb 07		 jmp	 SHORT $LN13@config_nam
$LN8@config_nam:
; Line 146
  0011a	e9 0d ff ff ff	 jmp	 $LN11@config_nam
$LN10@config_nam:
; Line 148
  0011f	33 c0		 xor	 eax, eax
$LN13@config_nam:
; Line 149
  00121	5f		 pop	 edi
  00122	5e		 pop	 esi
  00123	5b		 pop	 ebx
  00124	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  0012a	3b ec		 cmp	 ebp, esp
  0012c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
___config_name_compare ENDP
_TEXT	ENDS
PUBLIC	_config_set_destructor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_set_destructor
_TEXT	SEGMENT
_config$ = 8						; size = 4
_destructor$ = 12					; size = 4
_config_set_destructor PROC				; COMDAT
; Line 1380
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1381
  0001e	8b 45 08	 mov	 eax, DWORD PTR _config$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _destructor$[ebp]
  00024	89 48 04	 mov	 DWORD PTR [eax+4], ecx
; Line 1382
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
_config_set_destructor ENDP
_TEXT	ENDS
PUBLIC	_config_setting_length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_length
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_config_setting_length PROC				; COMDAT
; Line 1387
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1390
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00025	83 f9 01	 cmp	 ecx, 1
  00028	74 1c		 je	 SHORT $LN2@config_set@32
  0002a	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  0002d	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00031	83 f9 07	 cmp	 ecx, 7
  00034	74 10		 je	 SHORT $LN2@config_set@32
  00036	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00039	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003d	83 f9 08	 cmp	 ecx, 8
  00040	74 04		 je	 SHORT $LN2@config_set@32
; Line 1391
  00042	33 c0		 xor	 eax, eax
  00044	eb 15		 jmp	 SHORT $LN3@config_set@32
$LN2@config_set@32:
; Line 1393
  00046	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00049	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0004d	75 04		 jne	 SHORT $LN1@config_set@32
; Line 1394
  0004f	33 c0		 xor	 eax, eax
  00051	eb 08		 jmp	 SHORT $LN3@config_set@32
$LN1@config_set@32:
; Line 1396
  00053	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00056	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00059	8b 01		 mov	 eax, DWORD PTR [ecx]
$LN3@config_set@32:
; Line 1397
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
_config_setting_length ENDP
_TEXT	ENDS
PUBLIC	_config_setting_set_hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_set_hook
_TEXT	SEGMENT
_setting$ = 8						; size = 4
_hook$ = 12						; size = 4
_config_setting_set_hook PROC				; COMDAT
; Line 1402
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1403
  0001e	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _hook$[ebp]
  00024	89 48 18	 mov	 DWORD PTR [eax+24], ecx
; Line 1404
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
_config_setting_set_hook ENDP
_TEXT	ENDS
PUBLIC	_config_setting_add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_add
_TEXT	SEGMENT
_parent$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_config_setting_add PROC				; COMDAT
; Line 1410
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1411
  0001e	83 7d 10 00	 cmp	 DWORD PTR _type$[ebp], 0
  00022	7c 06		 jl	 SHORT $LN7@config_set@33
  00024	83 7d 10 08	 cmp	 DWORD PTR _type$[ebp], 8
  00028	7e 04		 jle	 SHORT $LN8@config_set@33
$LN7@config_set@33:
; Line 1412
  0002a	33 c0		 xor	 eax, eax
  0002c	eb 6f		 jmp	 SHORT $LN9@config_set@33
$LN8@config_set@33:
; Line 1414
  0002e	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00032	75 04		 jne	 SHORT $LN6@config_set@33
; Line 1415
  00034	33 c0		 xor	 eax, eax
  00036	eb 65		 jmp	 SHORT $LN9@config_set@33
$LN6@config_set@33:
; Line 1417
  00038	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0003b	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003f	83 f9 07	 cmp	 ecx, 7
  00042	74 0c		 je	 SHORT $LN4@config_set@33
  00044	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00047	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0004b	83 f9 08	 cmp	 ecx, 8
  0004e	75 07		 jne	 SHORT $LN5@config_set@33
$LN4@config_set@33:
; Line 1418
  00050	c7 45 0c 00 00
	00 00		 mov	 DWORD PTR _name$[ebp], 0
$LN5@config_set@33:
; Line 1420
  00057	83 7d 0c 00	 cmp	 DWORD PTR _name$[ebp], 0
  0005b	74 14		 je	 SHORT $LN3@config_set@33
; Line 1422
  0005d	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ___config_validate_name
  00066	83 c4 04	 add	 esp, 4
  00069	85 c0		 test	 eax, eax
  0006b	75 04		 jne	 SHORT $LN3@config_set@33
; Line 1423
  0006d	33 c0		 xor	 eax, eax
  0006f	eb 2c		 jmp	 SHORT $LN9@config_set@33
$LN3@config_set@33:
; Line 1426
  00071	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  00074	50		 push	 eax
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 _config_setting_get_member
  0007e	83 c4 08	 add	 esp, 8
  00081	85 c0		 test	 eax, eax
  00083	74 04		 je	 SHORT $LN1@config_set@33
; Line 1427
  00085	33 c0		 xor	 eax, eax
  00087	eb 14		 jmp	 SHORT $LN9@config_set@33
$LN1@config_set@33:
; Line 1429
  00089	8b 45 10	 mov	 eax, DWORD PTR _type$[ebp]
  0008c	50		 push	 eax
  0008d	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]
  00090	51		 push	 ecx
  00091	8b 55 08	 mov	 edx, DWORD PTR _parent$[ebp]
  00094	52		 push	 edx
  00095	e8 00 00 00 00	 call	 _config_setting_create
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@config_set@33:
; Line 1430
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
_config_setting_add ENDP
_TEXT	ENDS
PUBLIC	??_C@_03FGPOFMNL@?$CK_?9?$AA@			; `string'
EXTRN	_isdigit:PROC
EXTRN	_isalpha:PROC
;	COMDAT ??_C@_03FGPOFMNL@?$CK_?9?$AA@
CONST	SEGMENT
??_C@_03FGPOFMNL@?$CK_?9?$AA@ DB '*_-', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ___config_validate_name
_TEXT	SEGMENT
_p$ = -8						; size = 4
_name$ = 8						; size = 4
___config_validate_name PROC				; COMDAT
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 518
  0001e	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
; Line 520
  00024	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00027	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0002a	85 c9		 test	 ecx, ecx
  0002c	75 07		 jne	 SHORT $LN6@config_val
; Line 521
  0002e	33 c0		 xor	 eax, eax
  00030	e9 89 00 00 00	 jmp	 $LN7@config_val
$LN6@config_val:
; Line 523
  00035	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00038	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0003b	51		 push	 ecx
  0003c	e8 00 00 00 00	 call	 _isalpha
  00041	83 c4 04	 add	 esp, 4
  00044	85 c0		 test	 eax, eax
  00046	75 0f		 jne	 SHORT $LN5@config_val
  00048	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0004b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0004e	83 f9 2a	 cmp	 ecx, 42			; 0000002aH
  00051	74 04		 je	 SHORT $LN5@config_val
; Line 524
  00053	33 c0		 xor	 eax, eax
  00055	eb 67		 jmp	 SHORT $LN7@config_val
$LN5@config_val:
; Line 526
  00057	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0005a	83 c0 01	 add	 eax, 1
  0005d	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
  00060	eb 09		 jmp	 SHORT $LN4@config_val
$LN3@config_val:
  00062	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00065	83 c0 01	 add	 eax, 1
  00068	89 45 f8	 mov	 DWORD PTR _p$[ebp], eax
$LN4@config_val:
  0006b	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0006e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00071	85 c9		 test	 ecx, ecx
  00073	74 44		 je	 SHORT $LN2@config_val
; Line 528
  00075	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  00078	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 _isalpha
  00081	83 c4 04	 add	 esp, 4
  00084	85 c0		 test	 eax, eax
  00086	75 2f		 jne	 SHORT $LN1@config_val
  00088	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0008b	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 _isdigit
  00094	83 c4 04	 add	 esp, 4
  00097	85 c0		 test	 eax, eax
  00099	75 1c		 jne	 SHORT $LN1@config_val
  0009b	8b 45 f8	 mov	 eax, DWORD PTR _p$[ebp]
  0009e	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  000a1	51		 push	 ecx
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_03FGPOFMNL@?$CK_?9?$AA@
  000a7	e8 00 00 00 00	 call	 _strchr
  000ac	83 c4 08	 add	 esp, 8
  000af	85 c0		 test	 eax, eax
  000b1	75 04		 jne	 SHORT $LN1@config_val
; Line 529
  000b3	33 c0		 xor	 eax, eax
  000b5	eb 07		 jmp	 SHORT $LN7@config_val
$LN1@config_val:
; Line 530
  000b7	eb a9		 jmp	 SHORT $LN3@config_val
$LN2@config_val:
; Line 532
  000b9	b8 01 00 00 00	 mov	 eax, 1
$LN7@config_val:
; Line 533
  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c7	3b ec		 cmp	 ebp, esp
  000c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ce	8b e5		 mov	 esp, ebp
  000d0	5d		 pop	 ebp
  000d1	c3		 ret	 0
___config_validate_name ENDP
_TEXT	ENDS
PUBLIC	_config_setting_remove
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_remove
_TEXT	SEGMENT
_setting$ = -20						; size = 4
_idx$ = -8						; size = 4
_parent$ = 8						; size = 4
_name$ = 12						; size = 4
_config_setting_remove PROC				; COMDAT
; Line 1435
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1439
  0001e	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00022	75 04		 jne	 SHORT $LN3@config_set@34
; Line 1440
  00024	33 c0		 xor	 eax, eax
  00026	eb 58		 jmp	 SHORT $LN4@config_set@34
$LN3@config_set@34:
; Line 1442
  00028	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0002b	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0002f	83 f9 01	 cmp	 ecx, 1
  00032	74 04		 je	 SHORT $LN2@config_set@34
; Line 1443
  00034	33 c0		 xor	 eax, eax
  00036	eb 48		 jmp	 SHORT $LN4@config_set@34
$LN2@config_set@34:
; Line 1445
  00038	8d 45 f8	 lea	 eax, DWORD PTR _idx$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _name$[ebp]
  0003f	51		 push	 ecx
  00040	8b 55 08	 mov	 edx, DWORD PTR _parent$[ebp]
  00043	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ___config_list_search
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	89 45 ec	 mov	 DWORD PTR _setting$[ebp], eax
  00052	83 7d ec 00	 cmp	 DWORD PTR _setting$[ebp], 0
  00056	75 04		 jne	 SHORT $LN1@config_set@34
; Line 1446
  00058	33 c0		 xor	 eax, eax
  0005a	eb 24		 jmp	 SHORT $LN4@config_set@34
$LN1@config_set@34:
; Line 1448
  0005c	8b 45 f8	 mov	 eax, DWORD PTR _idx$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  00063	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00066	52		 push	 edx
  00067	e8 00 00 00 00	 call	 ___config_list_remove
  0006c	83 c4 08	 add	 esp, 8
; Line 1449
  0006f	8b 45 ec	 mov	 eax, DWORD PTR _setting$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ___config_setting_destroy
  00078	83 c4 04	 add	 esp, 4
; Line 1451
  0007b	b8 01 00 00 00	 mov	 eax, 1
$LN4@config_set@34:
; Line 1452
  00080	52		 push	 edx
  00081	8b cd		 mov	 ecx, ebp
  00083	50		 push	 eax
  00084	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@config_set@34
  0008a	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0008f	58		 pop	 eax
  00090	5a		 pop	 edx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
  000a5	8d 49 00	 npad	 3
$LN8@config_set@34:
  000a8	01 00 00 00	 DD	 1
  000ac	00 00 00 00	 DD	 $LN7@config_set@34
$LN7@config_set@34:
  000b0	f8 ff ff ff	 DD	 -8			; fffffff8H
  000b4	04 00 00 00	 DD	 4
  000b8	00 00 00 00	 DD	 $LN6@config_set@34
$LN6@config_set@34:
  000bc	69		 DB	 105			; 00000069H
  000bd	64		 DB	 100			; 00000064H
  000be	78		 DB	 120			; 00000078H
  000bf	00		 DB	 0
_config_setting_remove ENDP
_TEXT	ENDS
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ___config_list_remove
_TEXT	SEGMENT
_base$ = -44						; size = 4
_len$ = -32						; size = 4
_offset$ = -20						; size = 4
_removed$ = -8						; size = 4
_list$ = 8						; size = 4
_idx$ = 12						; size = 4
___config_list_remove PROC				; COMDAT
; Line 424
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 425
  0001e	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00021	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00024	8b 55 0c	 mov	 edx, DWORD PTR _idx$[ebp]
  00027	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0002a	89 45 f8	 mov	 DWORD PTR _removed$[ebp], eax
; Line 426
  0002d	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00030	c1 e0 02	 shl	 eax, 2
  00033	89 45 ec	 mov	 DWORD PTR _offset$[ebp], eax
; Line 427
  00036	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	83 e9 01	 sub	 ecx, 1
  0003e	2b 4d 0c	 sub	 ecx, DWORD PTR _idx$[ebp]
  00041	89 4d e0	 mov	 DWORD PTR _len$[ebp], ecx
; Line 428
  00044	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  00047	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004a	03 4d ec	 add	 ecx, DWORD PTR _offset$[ebp]
  0004d	89 4d d4	 mov	 DWORD PTR _base$[ebp], ecx
; Line 431
  00050	8b 45 e0	 mov	 eax, DWORD PTR _len$[ebp]
  00053	c1 e0 02	 shl	 eax, 2
  00056	50		 push	 eax
  00057	8b 4d d4	 mov	 ecx, DWORD PTR _base$[ebp]
  0005a	83 c1 04	 add	 ecx, 4
  0005d	51		 push	 ecx
  0005e	8b 55 d4	 mov	 edx, DWORD PTR _base$[ebp]
  00061	52		 push	 edx
  00062	e8 00 00 00 00	 call	 _memmove
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 433
  0006a	8b 45 08	 mov	 eax, DWORD PTR _list$[ebp]
  0006d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006f	83 e9 01	 sub	 ecx, 1
  00072	8b 55 08	 mov	 edx, DWORD PTR _list$[ebp]
  00075	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 440
  00077	8b 45 f8	 mov	 eax, DWORD PTR _removed$[ebp]
; Line 441
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
___config_list_remove ENDP
_TEXT	ENDS
PUBLIC	_config_setting_remove_elem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_remove_elem
_TEXT	SEGMENT
_removed$ = -20						; size = 4
_list$ = -8						; size = 4
_parent$ = 8						; size = 4
_idx$ = 12						; size = 4
_config_setting_remove_elem PROC			; COMDAT
; Line 1457
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1459
  0001e	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _removed$[ebp], 0
; Line 1461
  00025	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00029	75 04		 jne	 SHORT $LN5@config_set@35
; Line 1462
  0002b	33 c0		 xor	 eax, eax
  0002d	eb 69		 jmp	 SHORT $LN6@config_set@35
$LN5@config_set@35:
; Line 1464
  0002f	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00032	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00035	89 4d f8	 mov	 DWORD PTR _list$[ebp], ecx
; Line 1468
  00038	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  0003b	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0003f	83 f9 07	 cmp	 ecx, 7
  00042	74 18		 je	 SHORT $LN2@config_set@35
  00044	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00047	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  0004b	83 f9 08	 cmp	 ecx, 8
  0004e	74 0c		 je	 SHORT $LN2@config_set@35
  00050	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00053	0f bf 48 04	 movsx	 ecx, WORD PTR [eax+4]
  00057	83 f9 01	 cmp	 ecx, 1
  0005a	75 06		 jne	 SHORT $LN3@config_set@35
$LN2@config_set@35:
  0005c	83 7d f8 00	 cmp	 DWORD PTR _list$[ebp], 0
  00060	75 04		 jne	 SHORT $LN4@config_set@35
$LN3@config_set@35:
; Line 1469
  00062	33 c0		 xor	 eax, eax
  00064	eb 32		 jmp	 SHORT $LN6@config_set@35
$LN4@config_set@35:
; Line 1471
  00066	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  00069	8b 4d 0c	 mov	 ecx, DWORD PTR _idx$[ebp]
  0006c	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006e	72 04		 jb	 SHORT $LN1@config_set@35
; Line 1472
  00070	33 c0		 xor	 eax, eax
  00072	eb 24		 jmp	 SHORT $LN6@config_set@35
$LN1@config_set@35:
; Line 1474
  00074	8b 45 0c	 mov	 eax, DWORD PTR _idx$[ebp]
  00077	50		 push	 eax
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _list$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ___config_list_remove
  00081	83 c4 08	 add	 esp, 8
  00084	89 45 ec	 mov	 DWORD PTR _removed$[ebp], eax
; Line 1475
  00087	8b 45 ec	 mov	 eax, DWORD PTR _removed$[ebp]
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ___config_setting_destroy
  00090	83 c4 04	 add	 esp, 4
; Line 1477
  00093	b8 01 00 00 00	 mov	 eax, 1
$LN6@config_set@35:
; Line 1478
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000a1	3b ec		 cmp	 ebp, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
_config_setting_remove_elem ENDP
_TEXT	ENDS
PUBLIC	_config_setting_index
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _config_setting_index
_TEXT	SEGMENT
_i$ = -32						; size = 4
_list$ = -20						; size = 4
_found$ = -8						; size = 4
_setting$ = 8						; size = 4
_config_setting_index PROC				; COMDAT
; Line 1483
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
; Line 1484
  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _found$[ebp], 0
; Line 1488
  00025	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00028	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0002c	75 05		 jne	 SHORT $LN5@config_set@36
; Line 1489
  0002e	83 c8 ff	 or	 eax, -1
  00031	eb 4e		 jmp	 SHORT $LN6@config_set@36
$LN5@config_set@36:
; Line 1491
  00033	8b 45 08	 mov	 eax, DWORD PTR _setting$[ebp]
  00036	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00039	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0003c	89 55 ec	 mov	 DWORD PTR _list$[ebp], edx
; Line 1493
  0003f	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00046	8b 45 ec	 mov	 eax, DWORD PTR _list$[ebp]
  00049	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0004c	89 4d f8	 mov	 DWORD PTR _found$[ebp], ecx
  0004f	eb 12		 jmp	 SHORT $LN4@config_set@36
$LN3@config_set@36:
  00051	8b 45 e0	 mov	 eax, DWORD PTR _i$[ebp]
  00054	83 c0 01	 add	 eax, 1
  00057	89 45 e0	 mov	 DWORD PTR _i$[ebp], eax
  0005a	8b 4d f8	 mov	 ecx, DWORD PTR _found$[ebp]
  0005d	83 c1 04	 add	 ecx, 4
  00060	89 4d f8	 mov	 DWORD PTR _found$[ebp], ecx
$LN4@config_set@36:
  00063	8b 45 ec	 mov	 eax, DWORD PTR _list$[ebp]
  00066	8b 4d e0	 mov	 ecx, DWORD PTR _i$[ebp]
  00069	3b 08		 cmp	 ecx, DWORD PTR [eax]
  0006b	73 11		 jae	 SHORT $LN2@config_set@36
; Line 1495
  0006d	8b 45 f8	 mov	 eax, DWORD PTR _found$[ebp]
  00070	8b 08		 mov	 ecx, DWORD PTR [eax]
  00072	3b 4d 08	 cmp	 ecx, DWORD PTR _setting$[ebp]
  00075	75 05		 jne	 SHORT $LN1@config_set@36
; Line 1496
  00077	8b 45 e0	 mov	 eax, DWORD PTR _i$[ebp]
  0007a	eb 05		 jmp	 SHORT $LN6@config_set@36
$LN1@config_set@36:
; Line 1497
  0007c	eb d3		 jmp	 SHORT $LN3@config_set@36
$LN2@config_set@36:
; Line 1499
  0007e	83 c8 ff	 or	 eax, -1
$LN6@config_set@36:
; Line 1500
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
_config_setting_index ENDP
_TEXT	ENDS
END
